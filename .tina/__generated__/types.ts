//@ts-nocheck
  // DO NOT MODIFY THIS FILE. This file is automatically generated by Tina
  export function gql(strings: TemplateStringsArray, ...args: string[]): string {
    let str = ''
    strings.forEach((string, i) => {
      str += string + (args[i] || '')
    })
    return str
  }
  export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  /** References another document, used as a foreign key */
  Reference: any;
  JSON: any;
};

export type SystemInfo = {
  __typename?: 'SystemInfo';
  filename: Scalars['String'];
  title?: Maybe<Scalars['String']>;
  basename: Scalars['String'];
  breadcrumbs: Array<Scalars['String']>;
  path: Scalars['String'];
  relativePath: Scalars['String'];
  extension: Scalars['String'];
  template: Scalars['String'];
  collection: Collection;
};


export type SystemInfoBreadcrumbsArgs = {
  excludeExtension?: InputMaybe<Scalars['Boolean']>;
};

export type PageInfo = {
  __typename?: 'PageInfo';
  hasPreviousPage: Scalars['Boolean'];
  hasNextPage: Scalars['Boolean'];
  startCursor: Scalars['String'];
  endCursor: Scalars['String'];
};

export type Node = {
  id: Scalars['ID'];
};

export type Document = {
  id: Scalars['ID'];
  _sys?: Maybe<SystemInfo>;
  _values: Scalars['JSON'];
};

/** A relay-compliant pagination connection */
export type Connection = {
  totalCount: Scalars['Float'];
  pageInfo: PageInfo;
};

export type Query = {
  __typename?: 'Query';
  getOptimizedQuery?: Maybe<Scalars['String']>;
  collection: Collection;
  collections: Array<Collection>;
  node: Node;
  document: DocumentNode;
  post: Post;
  postConnection: PostConnection;
  global: Global;
  globalConnection: GlobalConnection;
  author: Author;
  authorConnection: AuthorConnection;
  page: Page;
  pageConnection: PageConnection;
};


export type QueryGetOptimizedQueryArgs = {
  queryString: Scalars['String'];
};


export type QueryCollectionArgs = {
  collection?: InputMaybe<Scalars['String']>;
};


export type QueryNodeArgs = {
  id?: InputMaybe<Scalars['String']>;
};


export type QueryDocumentArgs = {
  collection?: InputMaybe<Scalars['String']>;
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryPostArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryPostConnectionArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<PostFilter>;
};


export type QueryGlobalArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryGlobalConnectionArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<GlobalFilter>;
};


export type QueryAuthorArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryAuthorConnectionArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<AuthorFilter>;
};


export type QueryPageArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryPageConnectionArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<PageFilter>;
};

export type DocumentFilter = {
  post?: InputMaybe<PostFilter>;
  global?: InputMaybe<GlobalFilter>;
  author?: InputMaybe<AuthorFilter>;
  page?: InputMaybe<PageFilter>;
};

export type DocumentConnectionEdges = {
  __typename?: 'DocumentConnectionEdges';
  cursor: Scalars['String'];
  node?: Maybe<DocumentNode>;
};

export type DocumentConnection = Connection & {
  __typename?: 'DocumentConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<DocumentConnectionEdges>>>;
};

export type Collection = {
  __typename?: 'Collection';
  name: Scalars['String'];
  slug: Scalars['String'];
  label?: Maybe<Scalars['String']>;
  path: Scalars['String'];
  format?: Maybe<Scalars['String']>;
  matches?: Maybe<Scalars['String']>;
  templates?: Maybe<Array<Maybe<Scalars['JSON']>>>;
  fields?: Maybe<Array<Maybe<Scalars['JSON']>>>;
  documents: DocumentConnection;
};


export type CollectionDocumentsArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<DocumentFilter>;
};

export type DocumentNode = Post | Global | Author | Page;

export type PostAuthor = Author;

export type Post = Node & Document & {
  __typename?: 'Post';
  title: Scalars['String'];
  heroImg?: Maybe<Scalars['String']>;
  excerpt?: Maybe<Scalars['JSON']>;
  author?: Maybe<PostAuthor>;
  date?: Maybe<Scalars['String']>;
  _body?: Maybe<Scalars['JSON']>;
  id: Scalars['ID'];
  _sys: SystemInfo;
  _values: Scalars['JSON'];
};

export type StringFilter = {
  startsWith?: InputMaybe<Scalars['String']>;
  eq?: InputMaybe<Scalars['String']>;
  exists?: InputMaybe<Scalars['Boolean']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type ImageFilter = {
  startsWith?: InputMaybe<Scalars['String']>;
  eq?: InputMaybe<Scalars['String']>;
  exists?: InputMaybe<Scalars['Boolean']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type RichTextFilter = {
  startsWith?: InputMaybe<Scalars['String']>;
  eq?: InputMaybe<Scalars['String']>;
  exists?: InputMaybe<Scalars['Boolean']>;
};

export type PostAuthorFilter = {
  author?: InputMaybe<AuthorFilter>;
};

export type DatetimeFilter = {
  after?: InputMaybe<Scalars['String']>;
  before?: InputMaybe<Scalars['String']>;
  eq?: InputMaybe<Scalars['String']>;
  exists?: InputMaybe<Scalars['Boolean']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type Post_BodyDateTimeFilter = {
  format?: InputMaybe<StringFilter>;
};

export type Post_BodyBlockQuoteFilter = {
  children?: InputMaybe<RichTextFilter>;
  authorName?: InputMaybe<StringFilter>;
};

export type Post_BodyNewsletterSignupFilter = {
  children?: InputMaybe<RichTextFilter>;
  placeholder?: InputMaybe<StringFilter>;
  buttonText?: InputMaybe<StringFilter>;
  disclaimer?: InputMaybe<RichTextFilter>;
};

export type Post_BodyFilter = {
  DateTime?: InputMaybe<Post_BodyDateTimeFilter>;
  BlockQuote?: InputMaybe<Post_BodyBlockQuoteFilter>;
  NewsletterSignup?: InputMaybe<Post_BodyNewsletterSignupFilter>;
};

export type PostFilter = {
  title?: InputMaybe<StringFilter>;
  heroImg?: InputMaybe<ImageFilter>;
  excerpt?: InputMaybe<RichTextFilter>;
  author?: InputMaybe<PostAuthorFilter>;
  date?: InputMaybe<DatetimeFilter>;
  _body?: InputMaybe<Post_BodyFilter>;
};

export type PostConnectionEdges = {
  __typename?: 'PostConnectionEdges';
  cursor: Scalars['String'];
  node?: Maybe<Post>;
};

export type PostConnection = Connection & {
  __typename?: 'PostConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<PostConnectionEdges>>>;
};

export type GlobalTypography = {
  __typename?: 'GlobalTypography';
  headlineXs?: Maybe<Scalars['String']>;
  headlineSm?: Maybe<Scalars['String']>;
  headlineMd?: Maybe<Scalars['String']>;
  headlineLg?: Maybe<Scalars['String']>;
  headlineXl?: Maybe<Scalars['String']>;
  rule?: Maybe<Scalars['String']>;
  bodyXs?: Maybe<Scalars['String']>;
  bodySm?: Maybe<Scalars['String']>;
  bodyMd?: Maybe<Scalars['String']>;
  bodyLg?: Maybe<Scalars['String']>;
  bodyXl?: Maybe<Scalars['String']>;
};

export type GlobalColors = {
  __typename?: 'GlobalColors';
  primary?: Maybe<Scalars['String']>;
  accent1?: Maybe<Scalars['String']>;
  accent2?: Maybe<Scalars['String']>;
  accent3?: Maybe<Scalars['String']>;
  accent4?: Maybe<Scalars['String']>;
  white?: Maybe<Scalars['String']>;
  grayLight?: Maybe<Scalars['String']>;
  gray?: Maybe<Scalars['String']>;
  grayDark?: Maybe<Scalars['String']>;
  black?: Maybe<Scalars['String']>;
};

export type GlobalButtons = {
  __typename?: 'GlobalButtons';
  label?: Maybe<Scalars['String']>;
  fill?: Maybe<Scalars['String']>;
  typography?: Maybe<Scalars['String']>;
  padding?: Maybe<Scalars['String']>;
  primaryBorder?: Maybe<Scalars['String']>;
  primaryRounded?: Maybe<Scalars['String']>;
};

export type GlobalHeaderNav = {
  __typename?: 'GlobalHeaderNav';
  href?: Maybe<Scalars['String']>;
  label?: Maybe<Scalars['String']>;
};

export type GlobalHeader = {
  __typename?: 'GlobalHeader';
  color?: Maybe<Scalars['String']>;
  nav?: Maybe<Array<Maybe<GlobalHeaderNav>>>;
};

export type GlobalFooterSocial = {
  __typename?: 'GlobalFooterSocial';
  facebook?: Maybe<Scalars['String']>;
  twitter?: Maybe<Scalars['String']>;
  instagram?: Maybe<Scalars['String']>;
  github?: Maybe<Scalars['String']>;
};

export type GlobalFooter = {
  __typename?: 'GlobalFooter';
  color?: Maybe<Scalars['String']>;
  social?: Maybe<GlobalFooterSocial>;
};

export type Global = Node & Document & {
  __typename?: 'Global';
  siteUrl?: Maybe<Scalars['String']>;
  gtmId?: Maybe<Scalars['String']>;
  favicon?: Maybe<Scalars['String']>;
  desktopWidth?: Maybe<Scalars['String']>;
  backgroundColor?: Maybe<Scalars['String']>;
  rule?: Maybe<Scalars['String']>;
  typography?: Maybe<GlobalTypography>;
  colors?: Maybe<GlobalColors>;
  buttons?: Maybe<Array<Maybe<GlobalButtons>>>;
  header?: Maybe<GlobalHeader>;
  footer?: Maybe<GlobalFooter>;
  id: Scalars['ID'];
  _sys: SystemInfo;
  _values: Scalars['JSON'];
};

export type GlobalTypographyFilter = {
  headlineXs?: InputMaybe<StringFilter>;
  headlineSm?: InputMaybe<StringFilter>;
  headlineMd?: InputMaybe<StringFilter>;
  headlineLg?: InputMaybe<StringFilter>;
  headlineXl?: InputMaybe<StringFilter>;
  rule?: InputMaybe<StringFilter>;
  bodyXs?: InputMaybe<StringFilter>;
  bodySm?: InputMaybe<StringFilter>;
  bodyMd?: InputMaybe<StringFilter>;
  bodyLg?: InputMaybe<StringFilter>;
  bodyXl?: InputMaybe<StringFilter>;
};

export type GlobalColorsFilter = {
  primary?: InputMaybe<StringFilter>;
  accent1?: InputMaybe<StringFilter>;
  accent2?: InputMaybe<StringFilter>;
  accent3?: InputMaybe<StringFilter>;
  accent4?: InputMaybe<StringFilter>;
  white?: InputMaybe<StringFilter>;
  grayLight?: InputMaybe<StringFilter>;
  gray?: InputMaybe<StringFilter>;
  grayDark?: InputMaybe<StringFilter>;
  black?: InputMaybe<StringFilter>;
};

export type GlobalButtonsFilter = {
  label?: InputMaybe<StringFilter>;
  fill?: InputMaybe<StringFilter>;
  typography?: InputMaybe<StringFilter>;
  padding?: InputMaybe<StringFilter>;
  primaryBorder?: InputMaybe<StringFilter>;
  primaryRounded?: InputMaybe<StringFilter>;
};

export type GlobalHeaderNavFilter = {
  href?: InputMaybe<StringFilter>;
  label?: InputMaybe<StringFilter>;
};

export type GlobalHeaderFilter = {
  color?: InputMaybe<StringFilter>;
  nav?: InputMaybe<GlobalHeaderNavFilter>;
};

export type GlobalFooterSocialFilter = {
  facebook?: InputMaybe<StringFilter>;
  twitter?: InputMaybe<StringFilter>;
  instagram?: InputMaybe<StringFilter>;
  github?: InputMaybe<StringFilter>;
};

export type GlobalFooterFilter = {
  color?: InputMaybe<StringFilter>;
  social?: InputMaybe<GlobalFooterSocialFilter>;
};

export type GlobalFilter = {
  siteUrl?: InputMaybe<StringFilter>;
  gtmId?: InputMaybe<StringFilter>;
  favicon?: InputMaybe<ImageFilter>;
  desktopWidth?: InputMaybe<StringFilter>;
  backgroundColor?: InputMaybe<StringFilter>;
  rule?: InputMaybe<StringFilter>;
  typography?: InputMaybe<GlobalTypographyFilter>;
  colors?: InputMaybe<GlobalColorsFilter>;
  buttons?: InputMaybe<GlobalButtonsFilter>;
  header?: InputMaybe<GlobalHeaderFilter>;
  footer?: InputMaybe<GlobalFooterFilter>;
};

export type GlobalConnectionEdges = {
  __typename?: 'GlobalConnectionEdges';
  cursor: Scalars['String'];
  node?: Maybe<Global>;
};

export type GlobalConnection = Connection & {
  __typename?: 'GlobalConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<GlobalConnectionEdges>>>;
};

export type Author = Node & Document & {
  __typename?: 'Author';
  name: Scalars['String'];
  avatar?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  _sys: SystemInfo;
  _values: Scalars['JSON'];
};

export type AuthorFilter = {
  name?: InputMaybe<StringFilter>;
  avatar?: InputMaybe<StringFilter>;
};

export type AuthorConnectionEdges = {
  __typename?: 'AuthorConnectionEdges';
  cursor: Scalars['String'];
  node?: Maybe<Author>;
};

export type AuthorConnection = Connection & {
  __typename?: 'AuthorConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<AuthorConnectionEdges>>>;
};

export type PageBlocksCardsStyle = {
  __typename?: 'PageBlocksCardsStyle';
  padding?: Maybe<Scalars['String']>;
  contentWidth?: Maybe<Scalars['String']>;
  columns?: Maybe<Scalars['String']>;
  typographyTitle?: Maybe<Scalars['String']>;
  labelStyles?: Maybe<Scalars['String']>;
  headlineStyles?: Maybe<Scalars['String']>;
  subheadStyles?: Maybe<Scalars['String']>;
  textStyles?: Maybe<Scalars['String']>;
};

export type PageBlocksCardsCardStyle = {
  __typename?: 'PageBlocksCardsCardStyle';
  fillStyles?: Maybe<Scalars['String']>;
  padding?: Maybe<Scalars['String']>;
  borderStyles?: Maybe<Scalars['String']>;
  imageStyles?: Maybe<Scalars['String']>;
  typographyTitle?: Maybe<Scalars['String']>;
  labelStyles?: Maybe<Scalars['String']>;
  headlineStyles?: Maybe<Scalars['String']>;
  subheadStyles?: Maybe<Scalars['String']>;
  textStyles?: Maybe<Scalars['String']>;
  buttonTitle?: Maybe<Scalars['String']>;
  buttonType?: Maybe<Scalars['String']>;
};

export type PageBlocksCardsBackgroundOrnaments = {
  __typename?: 'PageBlocksCardsBackgroundOrnaments';
  src?: Maybe<Scalars['String']>;
  alignment?: Maybe<Scalars['String']>;
  width?: Maybe<Scalars['String']>;
  height?: Maybe<Scalars['String']>;
  xOffset?: Maybe<Scalars['String']>;
  yOffset?: Maybe<Scalars['String']>;
};

export type PageBlocksCardsBackground = {
  __typename?: 'PageBlocksCardsBackground';
  fillStyles?: Maybe<Scalars['String']>;
  src?: Maybe<Scalars['String']>;
  position?: Maybe<Scalars['String']>;
  ornaments?: Maybe<Array<Maybe<PageBlocksCardsBackgroundOrnaments>>>;
};

export type PageBlocksCardsItemsImage = {
  __typename?: 'PageBlocksCardsItemsImage';
  src?: Maybe<Scalars['String']>;
  alt?: Maybe<Scalars['String']>;
};

export type PageBlocksCardsItems = {
  __typename?: 'PageBlocksCardsItems';
  image?: Maybe<PageBlocksCardsItemsImage>;
  label?: Maybe<Scalars['String']>;
  headline?: Maybe<Scalars['String']>;
  subhead?: Maybe<Scalars['String']>;
  text?: Maybe<Scalars['JSON']>;
  link?: Maybe<Scalars['String']>;
  buttonLabel?: Maybe<Scalars['String']>;
};

export type PageBlocksCards = {
  __typename?: 'PageBlocksCards';
  style?: Maybe<PageBlocksCardsStyle>;
  cardStyle?: Maybe<PageBlocksCardsCardStyle>;
  background?: Maybe<PageBlocksCardsBackground>;
  label?: Maybe<Scalars['String']>;
  headline?: Maybe<Scalars['String']>;
  subhead?: Maybe<Scalars['String']>;
  body?: Maybe<Scalars['JSON']>;
  items?: Maybe<Array<Maybe<PageBlocksCardsItems>>>;
  navigationLabel?: Maybe<Scalars['String']>;
};

export type PageBlocksEmbedStyle = {
  __typename?: 'PageBlocksEmbedStyle';
  fullWidth?: Maybe<Scalars['Boolean']>;
  minHeight?: Maybe<Scalars['String']>;
  padding?: Maybe<Scalars['String']>;
};

export type PageBlocksEmbedBackgroundOrnaments = {
  __typename?: 'PageBlocksEmbedBackgroundOrnaments';
  src?: Maybe<Scalars['String']>;
  alignment?: Maybe<Scalars['String']>;
  width?: Maybe<Scalars['String']>;
  height?: Maybe<Scalars['String']>;
  xOffset?: Maybe<Scalars['String']>;
  yOffset?: Maybe<Scalars['String']>;
};

export type PageBlocksEmbedBackground = {
  __typename?: 'PageBlocksEmbedBackground';
  fillStyles?: Maybe<Scalars['String']>;
  src?: Maybe<Scalars['String']>;
  position?: Maybe<Scalars['String']>;
  ornaments?: Maybe<Array<Maybe<PageBlocksEmbedBackgroundOrnaments>>>;
};

export type PageBlocksEmbed = {
  __typename?: 'PageBlocksEmbed';
  style?: Maybe<PageBlocksEmbedStyle>;
  background?: Maybe<PageBlocksEmbedBackground>;
  markup?: Maybe<Scalars['String']>;
  navigationLabel?: Maybe<Scalars['String']>;
};

export type PageBlocksFeatureStyle = {
  __typename?: 'PageBlocksFeatureStyle';
  alignment?: Maybe<Scalars['String']>;
  padding?: Maybe<Scalars['String']>;
  featureImage?: Maybe<Scalars['String']>;
  featureContent?: Maybe<Scalars['String']>;
  typographyTitle?: Maybe<Scalars['String']>;
  labelStyles?: Maybe<Scalars['String']>;
  headlineStyles?: Maybe<Scalars['String']>;
  subheadStyles?: Maybe<Scalars['String']>;
  textStyles?: Maybe<Scalars['String']>;
};

export type PageBlocksFeatureBackgroundOrnaments = {
  __typename?: 'PageBlocksFeatureBackgroundOrnaments';
  src?: Maybe<Scalars['String']>;
  alignment?: Maybe<Scalars['String']>;
  width?: Maybe<Scalars['String']>;
  height?: Maybe<Scalars['String']>;
  xOffset?: Maybe<Scalars['String']>;
  yOffset?: Maybe<Scalars['String']>;
};

export type PageBlocksFeatureBackground = {
  __typename?: 'PageBlocksFeatureBackground';
  fillStyles?: Maybe<Scalars['String']>;
  src?: Maybe<Scalars['String']>;
  position?: Maybe<Scalars['String']>;
  ornaments?: Maybe<Array<Maybe<PageBlocksFeatureBackgroundOrnaments>>>;
};

export type PageBlocksFeatureImage = {
  __typename?: 'PageBlocksFeatureImage';
  src?: Maybe<Scalars['String']>;
  alt?: Maybe<Scalars['String']>;
};

export type PageBlocksFeatureButtons = {
  __typename?: 'PageBlocksFeatureButtons';
  label?: Maybe<Scalars['String']>;
  link?: Maybe<Scalars['String']>;
  buttonStyle?: Maybe<Scalars['String']>;
};

export type PageBlocksFeature = {
  __typename?: 'PageBlocksFeature';
  style?: Maybe<PageBlocksFeatureStyle>;
  background?: Maybe<PageBlocksFeatureBackground>;
  image?: Maybe<PageBlocksFeatureImage>;
  rule?: Maybe<Scalars['String']>;
  label?: Maybe<Scalars['String']>;
  headline?: Maybe<Scalars['String']>;
  subhead?: Maybe<Scalars['String']>;
  body?: Maybe<Scalars['JSON']>;
  buttons?: Maybe<Array<Maybe<PageBlocksFeatureButtons>>>;
  navigationLabel?: Maybe<Scalars['String']>;
};

export type PageBlocksTailwindFeatureTailwind = {
  __typename?: 'PageBlocksTailwindFeatureTailwind';
  section?: Maybe<Scalars['String']>;
  wrap?: Maybe<Scalars['String']>;
  imageWrap?: Maybe<Scalars['String']>;
  image?: Maybe<Scalars['String']>;
  contentWrap?: Maybe<Scalars['String']>;
  content?: Maybe<Scalars['String']>;
  label?: Maybe<Scalars['String']>;
  headline?: Maybe<Scalars['String']>;
  subhead?: Maybe<Scalars['String']>;
  text?: Maybe<Scalars['String']>;
  buttons?: Maybe<Scalars['String']>;
  button?: Maybe<Scalars['String']>;
};

export type PageBlocksTailwindFeatureImage = {
  __typename?: 'PageBlocksTailwindFeatureImage';
  src?: Maybe<Scalars['String']>;
  alt?: Maybe<Scalars['String']>;
};

export type PageBlocksTailwindFeatureBackgroundOrnaments = {
  __typename?: 'PageBlocksTailwindFeatureBackgroundOrnaments';
  src?: Maybe<Scalars['String']>;
  alignment?: Maybe<Scalars['String']>;
  width?: Maybe<Scalars['String']>;
  height?: Maybe<Scalars['String']>;
  xOffset?: Maybe<Scalars['String']>;
  yOffset?: Maybe<Scalars['String']>;
};

export type PageBlocksTailwindFeatureBackground = {
  __typename?: 'PageBlocksTailwindFeatureBackground';
  fillStyles?: Maybe<Scalars['String']>;
  src?: Maybe<Scalars['String']>;
  position?: Maybe<Scalars['String']>;
  ornaments?: Maybe<Array<Maybe<PageBlocksTailwindFeatureBackgroundOrnaments>>>;
};

export type PageBlocksTailwindFeatureButtons = {
  __typename?: 'PageBlocksTailwindFeatureButtons';
  label?: Maybe<Scalars['String']>;
  link?: Maybe<Scalars['String']>;
};

export type PageBlocksTailwindFeature = {
  __typename?: 'PageBlocksTailwindFeature';
  tailwind?: Maybe<PageBlocksTailwindFeatureTailwind>;
  image?: Maybe<PageBlocksTailwindFeatureImage>;
  background?: Maybe<PageBlocksTailwindFeatureBackground>;
  rule?: Maybe<Scalars['String']>;
  label?: Maybe<Scalars['String']>;
  headline?: Maybe<Scalars['String']>;
  subhead?: Maybe<Scalars['String']>;
  body?: Maybe<Scalars['JSON']>;
  buttons?: Maybe<Array<Maybe<PageBlocksTailwindFeatureButtons>>>;
  rule2?: Maybe<Scalars['String']>;
  navigationLabel?: Maybe<Scalars['String']>;
};

export type PageBlocksTailwindCardsTailwind = {
  __typename?: 'PageBlocksTailwindCardsTailwind';
  section?: Maybe<Scalars['String']>;
  wrap?: Maybe<Scalars['String']>;
  imageWrap?: Maybe<Scalars['String']>;
  image?: Maybe<Scalars['String']>;
  contentWrap?: Maybe<Scalars['String']>;
  content?: Maybe<Scalars['String']>;
  label?: Maybe<Scalars['String']>;
  headline?: Maybe<Scalars['String']>;
  subhead?: Maybe<Scalars['String']>;
  text?: Maybe<Scalars['String']>;
  buttons?: Maybe<Scalars['String']>;
  button?: Maybe<Scalars['String']>;
  rule?: Maybe<Scalars['String']>;
  cardWrap?: Maybe<Scalars['String']>;
  card?: Maybe<Scalars['String']>;
  cardImageWrap?: Maybe<Scalars['String']>;
  cardImage?: Maybe<Scalars['String']>;
  cardContentWrap?: Maybe<Scalars['String']>;
  cardContent?: Maybe<Scalars['String']>;
  cardLabel?: Maybe<Scalars['String']>;
  cardHeadline?: Maybe<Scalars['String']>;
  cardSubhead?: Maybe<Scalars['String']>;
  cardText?: Maybe<Scalars['String']>;
  cardButtons?: Maybe<Scalars['String']>;
  cardButton?: Maybe<Scalars['String']>;
};

export type PageBlocksTailwindCardsImage = {
  __typename?: 'PageBlocksTailwindCardsImage';
  src?: Maybe<Scalars['String']>;
  alt?: Maybe<Scalars['String']>;
};

export type PageBlocksTailwindCardsBackgroundOrnaments = {
  __typename?: 'PageBlocksTailwindCardsBackgroundOrnaments';
  src?: Maybe<Scalars['String']>;
  alignment?: Maybe<Scalars['String']>;
  width?: Maybe<Scalars['String']>;
  height?: Maybe<Scalars['String']>;
  xOffset?: Maybe<Scalars['String']>;
  yOffset?: Maybe<Scalars['String']>;
};

export type PageBlocksTailwindCardsBackground = {
  __typename?: 'PageBlocksTailwindCardsBackground';
  fillStyles?: Maybe<Scalars['String']>;
  src?: Maybe<Scalars['String']>;
  position?: Maybe<Scalars['String']>;
  ornaments?: Maybe<Array<Maybe<PageBlocksTailwindCardsBackgroundOrnaments>>>;
};

export type PageBlocksTailwindCardsButtons = {
  __typename?: 'PageBlocksTailwindCardsButtons';
  label?: Maybe<Scalars['String']>;
  link?: Maybe<Scalars['String']>;
  buttonStyle?: Maybe<Scalars['String']>;
};

export type PageBlocksTailwindCardsItemsImage = {
  __typename?: 'PageBlocksTailwindCardsItemsImage';
  src?: Maybe<Scalars['String']>;
  alt?: Maybe<Scalars['String']>;
};

export type PageBlocksTailwindCardsItems = {
  __typename?: 'PageBlocksTailwindCardsItems';
  image?: Maybe<PageBlocksTailwindCardsItemsImage>;
  label?: Maybe<Scalars['String']>;
  headline?: Maybe<Scalars['String']>;
  subhead?: Maybe<Scalars['String']>;
  text?: Maybe<Scalars['JSON']>;
  link?: Maybe<Scalars['String']>;
  buttonLabel?: Maybe<Scalars['String']>;
};

export type PageBlocksTailwindCards = {
  __typename?: 'PageBlocksTailwindCards';
  tailwind?: Maybe<PageBlocksTailwindCardsTailwind>;
  image?: Maybe<PageBlocksTailwindCardsImage>;
  background?: Maybe<PageBlocksTailwindCardsBackground>;
  rule?: Maybe<Scalars['String']>;
  label?: Maybe<Scalars['String']>;
  headline?: Maybe<Scalars['String']>;
  subhead?: Maybe<Scalars['String']>;
  body?: Maybe<Scalars['JSON']>;
  buttons?: Maybe<Array<Maybe<PageBlocksTailwindCardsButtons>>>;
  items?: Maybe<Array<Maybe<PageBlocksTailwindCardsItems>>>;
  rule2?: Maybe<Scalars['String']>;
  navigationLabel?: Maybe<Scalars['String']>;
};

export type PageBlocks = PageBlocksCards | PageBlocksEmbed | PageBlocksFeature | PageBlocksTailwindFeature | PageBlocksTailwindCards;

export type Page = Node & Document & {
  __typename?: 'Page';
  title: Scalars['String'];
  blocks?: Maybe<Array<Maybe<PageBlocks>>>;
  id: Scalars['ID'];
  _sys: SystemInfo;
  _values: Scalars['JSON'];
};

export type PageBlocksCardsStyleFilter = {
  padding?: InputMaybe<StringFilter>;
  contentWidth?: InputMaybe<StringFilter>;
  columns?: InputMaybe<StringFilter>;
  typographyTitle?: InputMaybe<StringFilter>;
  labelStyles?: InputMaybe<StringFilter>;
  headlineStyles?: InputMaybe<StringFilter>;
  subheadStyles?: InputMaybe<StringFilter>;
  textStyles?: InputMaybe<StringFilter>;
};

export type PageBlocksCardsCardStyleFilter = {
  fillStyles?: InputMaybe<StringFilter>;
  padding?: InputMaybe<StringFilter>;
  borderStyles?: InputMaybe<StringFilter>;
  imageStyles?: InputMaybe<StringFilter>;
  typographyTitle?: InputMaybe<StringFilter>;
  labelStyles?: InputMaybe<StringFilter>;
  headlineStyles?: InputMaybe<StringFilter>;
  subheadStyles?: InputMaybe<StringFilter>;
  textStyles?: InputMaybe<StringFilter>;
  buttonTitle?: InputMaybe<StringFilter>;
  buttonType?: InputMaybe<StringFilter>;
};

export type PageBlocksCardsBackgroundOrnamentsFilter = {
  src?: InputMaybe<ImageFilter>;
  alignment?: InputMaybe<StringFilter>;
  width?: InputMaybe<StringFilter>;
  height?: InputMaybe<StringFilter>;
  xOffset?: InputMaybe<StringFilter>;
  yOffset?: InputMaybe<StringFilter>;
};

export type PageBlocksCardsBackgroundFilter = {
  fillStyles?: InputMaybe<StringFilter>;
  src?: InputMaybe<ImageFilter>;
  position?: InputMaybe<StringFilter>;
  ornaments?: InputMaybe<PageBlocksCardsBackgroundOrnamentsFilter>;
};

export type PageBlocksCardsItemsImageFilter = {
  src?: InputMaybe<ImageFilter>;
  alt?: InputMaybe<StringFilter>;
};

export type PageBlocksCardsItemsFilter = {
  image?: InputMaybe<PageBlocksCardsItemsImageFilter>;
  label?: InputMaybe<StringFilter>;
  headline?: InputMaybe<StringFilter>;
  subhead?: InputMaybe<StringFilter>;
  text?: InputMaybe<RichTextFilter>;
  link?: InputMaybe<StringFilter>;
  buttonLabel?: InputMaybe<StringFilter>;
};

export type PageBlocksCardsFilter = {
  style?: InputMaybe<PageBlocksCardsStyleFilter>;
  cardStyle?: InputMaybe<PageBlocksCardsCardStyleFilter>;
  background?: InputMaybe<PageBlocksCardsBackgroundFilter>;
  label?: InputMaybe<StringFilter>;
  headline?: InputMaybe<StringFilter>;
  subhead?: InputMaybe<StringFilter>;
  body?: InputMaybe<RichTextFilter>;
  items?: InputMaybe<PageBlocksCardsItemsFilter>;
  navigationLabel?: InputMaybe<StringFilter>;
};

export type BooleanFilter = {
  eq?: InputMaybe<Scalars['Boolean']>;
  exists?: InputMaybe<Scalars['Boolean']>;
};

export type PageBlocksEmbedStyleFilter = {
  fullWidth?: InputMaybe<BooleanFilter>;
  minHeight?: InputMaybe<StringFilter>;
  padding?: InputMaybe<StringFilter>;
};

export type PageBlocksEmbedBackgroundOrnamentsFilter = {
  src?: InputMaybe<ImageFilter>;
  alignment?: InputMaybe<StringFilter>;
  width?: InputMaybe<StringFilter>;
  height?: InputMaybe<StringFilter>;
  xOffset?: InputMaybe<StringFilter>;
  yOffset?: InputMaybe<StringFilter>;
};

export type PageBlocksEmbedBackgroundFilter = {
  fillStyles?: InputMaybe<StringFilter>;
  src?: InputMaybe<ImageFilter>;
  position?: InputMaybe<StringFilter>;
  ornaments?: InputMaybe<PageBlocksEmbedBackgroundOrnamentsFilter>;
};

export type PageBlocksEmbedFilter = {
  style?: InputMaybe<PageBlocksEmbedStyleFilter>;
  background?: InputMaybe<PageBlocksEmbedBackgroundFilter>;
  markup?: InputMaybe<StringFilter>;
  navigationLabel?: InputMaybe<StringFilter>;
};

export type PageBlocksFeatureStyleFilter = {
  alignment?: InputMaybe<StringFilter>;
  padding?: InputMaybe<StringFilter>;
  featureImage?: InputMaybe<StringFilter>;
  featureContent?: InputMaybe<StringFilter>;
  typographyTitle?: InputMaybe<StringFilter>;
  labelStyles?: InputMaybe<StringFilter>;
  headlineStyles?: InputMaybe<StringFilter>;
  subheadStyles?: InputMaybe<StringFilter>;
  textStyles?: InputMaybe<StringFilter>;
};

export type PageBlocksFeatureBackgroundOrnamentsFilter = {
  src?: InputMaybe<ImageFilter>;
  alignment?: InputMaybe<StringFilter>;
  width?: InputMaybe<StringFilter>;
  height?: InputMaybe<StringFilter>;
  xOffset?: InputMaybe<StringFilter>;
  yOffset?: InputMaybe<StringFilter>;
};

export type PageBlocksFeatureBackgroundFilter = {
  fillStyles?: InputMaybe<StringFilter>;
  src?: InputMaybe<ImageFilter>;
  position?: InputMaybe<StringFilter>;
  ornaments?: InputMaybe<PageBlocksFeatureBackgroundOrnamentsFilter>;
};

export type PageBlocksFeatureImageFilter = {
  src?: InputMaybe<ImageFilter>;
  alt?: InputMaybe<StringFilter>;
};

export type PageBlocksFeatureButtonsFilter = {
  label?: InputMaybe<StringFilter>;
  link?: InputMaybe<StringFilter>;
  buttonStyle?: InputMaybe<StringFilter>;
};

export type PageBlocksFeatureFilter = {
  style?: InputMaybe<PageBlocksFeatureStyleFilter>;
  background?: InputMaybe<PageBlocksFeatureBackgroundFilter>;
  image?: InputMaybe<PageBlocksFeatureImageFilter>;
  rule?: InputMaybe<StringFilter>;
  label?: InputMaybe<StringFilter>;
  headline?: InputMaybe<StringFilter>;
  subhead?: InputMaybe<StringFilter>;
  body?: InputMaybe<RichTextFilter>;
  buttons?: InputMaybe<PageBlocksFeatureButtonsFilter>;
  navigationLabel?: InputMaybe<StringFilter>;
};

export type PageBlocksTailwindFeatureTailwindFilter = {
  section?: InputMaybe<StringFilter>;
  wrap?: InputMaybe<StringFilter>;
  imageWrap?: InputMaybe<StringFilter>;
  image?: InputMaybe<StringFilter>;
  contentWrap?: InputMaybe<StringFilter>;
  content?: InputMaybe<StringFilter>;
  label?: InputMaybe<StringFilter>;
  headline?: InputMaybe<StringFilter>;
  subhead?: InputMaybe<StringFilter>;
  text?: InputMaybe<StringFilter>;
  buttons?: InputMaybe<StringFilter>;
  button?: InputMaybe<StringFilter>;
};

export type PageBlocksTailwindFeatureImageFilter = {
  src?: InputMaybe<ImageFilter>;
  alt?: InputMaybe<StringFilter>;
};

export type PageBlocksTailwindFeatureBackgroundOrnamentsFilter = {
  src?: InputMaybe<ImageFilter>;
  alignment?: InputMaybe<StringFilter>;
  width?: InputMaybe<StringFilter>;
  height?: InputMaybe<StringFilter>;
  xOffset?: InputMaybe<StringFilter>;
  yOffset?: InputMaybe<StringFilter>;
};

export type PageBlocksTailwindFeatureBackgroundFilter = {
  fillStyles?: InputMaybe<StringFilter>;
  src?: InputMaybe<ImageFilter>;
  position?: InputMaybe<StringFilter>;
  ornaments?: InputMaybe<PageBlocksTailwindFeatureBackgroundOrnamentsFilter>;
};

export type PageBlocksTailwindFeatureButtonsFilter = {
  label?: InputMaybe<StringFilter>;
  link?: InputMaybe<StringFilter>;
};

export type PageBlocksTailwindFeatureFilter = {
  tailwind?: InputMaybe<PageBlocksTailwindFeatureTailwindFilter>;
  image?: InputMaybe<PageBlocksTailwindFeatureImageFilter>;
  background?: InputMaybe<PageBlocksTailwindFeatureBackgroundFilter>;
  rule?: InputMaybe<StringFilter>;
  label?: InputMaybe<StringFilter>;
  headline?: InputMaybe<StringFilter>;
  subhead?: InputMaybe<StringFilter>;
  body?: InputMaybe<RichTextFilter>;
  buttons?: InputMaybe<PageBlocksTailwindFeatureButtonsFilter>;
  rule2?: InputMaybe<StringFilter>;
  navigationLabel?: InputMaybe<StringFilter>;
};

export type PageBlocksTailwindCardsTailwindFilter = {
  section?: InputMaybe<StringFilter>;
  wrap?: InputMaybe<StringFilter>;
  imageWrap?: InputMaybe<StringFilter>;
  image?: InputMaybe<StringFilter>;
  contentWrap?: InputMaybe<StringFilter>;
  content?: InputMaybe<StringFilter>;
  label?: InputMaybe<StringFilter>;
  headline?: InputMaybe<StringFilter>;
  subhead?: InputMaybe<StringFilter>;
  text?: InputMaybe<StringFilter>;
  buttons?: InputMaybe<StringFilter>;
  button?: InputMaybe<StringFilter>;
  rule?: InputMaybe<StringFilter>;
  cardWrap?: InputMaybe<StringFilter>;
  card?: InputMaybe<StringFilter>;
  cardImageWrap?: InputMaybe<StringFilter>;
  cardImage?: InputMaybe<StringFilter>;
  cardContentWrap?: InputMaybe<StringFilter>;
  cardContent?: InputMaybe<StringFilter>;
  cardLabel?: InputMaybe<StringFilter>;
  cardHeadline?: InputMaybe<StringFilter>;
  cardSubhead?: InputMaybe<StringFilter>;
  cardText?: InputMaybe<StringFilter>;
  cardButtons?: InputMaybe<StringFilter>;
  cardButton?: InputMaybe<StringFilter>;
};

export type PageBlocksTailwindCardsImageFilter = {
  src?: InputMaybe<ImageFilter>;
  alt?: InputMaybe<StringFilter>;
};

export type PageBlocksTailwindCardsBackgroundOrnamentsFilter = {
  src?: InputMaybe<ImageFilter>;
  alignment?: InputMaybe<StringFilter>;
  width?: InputMaybe<StringFilter>;
  height?: InputMaybe<StringFilter>;
  xOffset?: InputMaybe<StringFilter>;
  yOffset?: InputMaybe<StringFilter>;
};

export type PageBlocksTailwindCardsBackgroundFilter = {
  fillStyles?: InputMaybe<StringFilter>;
  src?: InputMaybe<ImageFilter>;
  position?: InputMaybe<StringFilter>;
  ornaments?: InputMaybe<PageBlocksTailwindCardsBackgroundOrnamentsFilter>;
};

export type PageBlocksTailwindCardsButtonsFilter = {
  label?: InputMaybe<StringFilter>;
  link?: InputMaybe<StringFilter>;
  buttonStyle?: InputMaybe<StringFilter>;
};

export type PageBlocksTailwindCardsItemsImageFilter = {
  src?: InputMaybe<ImageFilter>;
  alt?: InputMaybe<StringFilter>;
};

export type PageBlocksTailwindCardsItemsFilter = {
  image?: InputMaybe<PageBlocksTailwindCardsItemsImageFilter>;
  label?: InputMaybe<StringFilter>;
  headline?: InputMaybe<StringFilter>;
  subhead?: InputMaybe<StringFilter>;
  text?: InputMaybe<RichTextFilter>;
  link?: InputMaybe<StringFilter>;
  buttonLabel?: InputMaybe<StringFilter>;
};

export type PageBlocksTailwindCardsFilter = {
  tailwind?: InputMaybe<PageBlocksTailwindCardsTailwindFilter>;
  image?: InputMaybe<PageBlocksTailwindCardsImageFilter>;
  background?: InputMaybe<PageBlocksTailwindCardsBackgroundFilter>;
  rule?: InputMaybe<StringFilter>;
  label?: InputMaybe<StringFilter>;
  headline?: InputMaybe<StringFilter>;
  subhead?: InputMaybe<StringFilter>;
  body?: InputMaybe<RichTextFilter>;
  buttons?: InputMaybe<PageBlocksTailwindCardsButtonsFilter>;
  items?: InputMaybe<PageBlocksTailwindCardsItemsFilter>;
  rule2?: InputMaybe<StringFilter>;
  navigationLabel?: InputMaybe<StringFilter>;
};

export type PageBlocksFilter = {
  cards?: InputMaybe<PageBlocksCardsFilter>;
  embed?: InputMaybe<PageBlocksEmbedFilter>;
  feature?: InputMaybe<PageBlocksFeatureFilter>;
  tailwindFeature?: InputMaybe<PageBlocksTailwindFeatureFilter>;
  tailwindCards?: InputMaybe<PageBlocksTailwindCardsFilter>;
};

export type PageFilter = {
  title?: InputMaybe<StringFilter>;
  blocks?: InputMaybe<PageBlocksFilter>;
};

export type PageConnectionEdges = {
  __typename?: 'PageConnectionEdges';
  cursor: Scalars['String'];
  node?: Maybe<Page>;
};

export type PageConnection = Connection & {
  __typename?: 'PageConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<PageConnectionEdges>>>;
};

export type Mutation = {
  __typename?: 'Mutation';
  addPendingDocument: DocumentNode;
  updateDocument: DocumentNode;
  deleteDocument: DocumentNode;
  createDocument: DocumentNode;
  updatePost: Post;
  createPost: Post;
  updateGlobal: Global;
  createGlobal: Global;
  updateAuthor: Author;
  createAuthor: Author;
  updatePage: Page;
  createPage: Page;
};


export type MutationAddPendingDocumentArgs = {
  collection: Scalars['String'];
  relativePath: Scalars['String'];
  template?: InputMaybe<Scalars['String']>;
};


export type MutationUpdateDocumentArgs = {
  collection?: InputMaybe<Scalars['String']>;
  relativePath: Scalars['String'];
  params: DocumentMutation;
};


export type MutationDeleteDocumentArgs = {
  collection?: InputMaybe<Scalars['String']>;
  relativePath: Scalars['String'];
};


export type MutationCreateDocumentArgs = {
  collection?: InputMaybe<Scalars['String']>;
  relativePath: Scalars['String'];
  params: DocumentMutation;
};


export type MutationUpdatePostArgs = {
  relativePath: Scalars['String'];
  params: PostMutation;
};


export type MutationCreatePostArgs = {
  relativePath: Scalars['String'];
  params: PostMutation;
};


export type MutationUpdateGlobalArgs = {
  relativePath: Scalars['String'];
  params: GlobalMutation;
};


export type MutationCreateGlobalArgs = {
  relativePath: Scalars['String'];
  params: GlobalMutation;
};


export type MutationUpdateAuthorArgs = {
  relativePath: Scalars['String'];
  params: AuthorMutation;
};


export type MutationCreateAuthorArgs = {
  relativePath: Scalars['String'];
  params: AuthorMutation;
};


export type MutationUpdatePageArgs = {
  relativePath: Scalars['String'];
  params: PageMutation;
};


export type MutationCreatePageArgs = {
  relativePath: Scalars['String'];
  params: PageMutation;
};

export type DocumentMutation = {
  post?: InputMaybe<PostMutation>;
  global?: InputMaybe<GlobalMutation>;
  author?: InputMaybe<AuthorMutation>;
  page?: InputMaybe<PageMutation>;
};

export type PostMutation = {
  title?: InputMaybe<Scalars['String']>;
  heroImg?: InputMaybe<Scalars['String']>;
  excerpt?: InputMaybe<Scalars['JSON']>;
  author?: InputMaybe<Scalars['String']>;
  date?: InputMaybe<Scalars['String']>;
  _body?: InputMaybe<Scalars['JSON']>;
};

export type GlobalTypographyMutation = {
  headlineXs?: InputMaybe<Scalars['String']>;
  headlineSm?: InputMaybe<Scalars['String']>;
  headlineMd?: InputMaybe<Scalars['String']>;
  headlineLg?: InputMaybe<Scalars['String']>;
  headlineXl?: InputMaybe<Scalars['String']>;
  rule?: InputMaybe<Scalars['String']>;
  bodyXs?: InputMaybe<Scalars['String']>;
  bodySm?: InputMaybe<Scalars['String']>;
  bodyMd?: InputMaybe<Scalars['String']>;
  bodyLg?: InputMaybe<Scalars['String']>;
  bodyXl?: InputMaybe<Scalars['String']>;
};

export type GlobalColorsMutation = {
  primary?: InputMaybe<Scalars['String']>;
  accent1?: InputMaybe<Scalars['String']>;
  accent2?: InputMaybe<Scalars['String']>;
  accent3?: InputMaybe<Scalars['String']>;
  accent4?: InputMaybe<Scalars['String']>;
  white?: InputMaybe<Scalars['String']>;
  grayLight?: InputMaybe<Scalars['String']>;
  gray?: InputMaybe<Scalars['String']>;
  grayDark?: InputMaybe<Scalars['String']>;
  black?: InputMaybe<Scalars['String']>;
};

export type GlobalButtonsMutation = {
  label?: InputMaybe<Scalars['String']>;
  fill?: InputMaybe<Scalars['String']>;
  typography?: InputMaybe<Scalars['String']>;
  padding?: InputMaybe<Scalars['String']>;
  primaryBorder?: InputMaybe<Scalars['String']>;
  primaryRounded?: InputMaybe<Scalars['String']>;
};

export type GlobalHeaderNavMutation = {
  href?: InputMaybe<Scalars['String']>;
  label?: InputMaybe<Scalars['String']>;
};

export type GlobalHeaderMutation = {
  color?: InputMaybe<Scalars['String']>;
  nav?: InputMaybe<Array<InputMaybe<GlobalHeaderNavMutation>>>;
};

export type GlobalFooterSocialMutation = {
  facebook?: InputMaybe<Scalars['String']>;
  twitter?: InputMaybe<Scalars['String']>;
  instagram?: InputMaybe<Scalars['String']>;
  github?: InputMaybe<Scalars['String']>;
};

export type GlobalFooterMutation = {
  color?: InputMaybe<Scalars['String']>;
  social?: InputMaybe<GlobalFooterSocialMutation>;
};

export type GlobalMutation = {
  siteUrl?: InputMaybe<Scalars['String']>;
  gtmId?: InputMaybe<Scalars['String']>;
  favicon?: InputMaybe<Scalars['String']>;
  desktopWidth?: InputMaybe<Scalars['String']>;
  backgroundColor?: InputMaybe<Scalars['String']>;
  rule?: InputMaybe<Scalars['String']>;
  typography?: InputMaybe<GlobalTypographyMutation>;
  colors?: InputMaybe<GlobalColorsMutation>;
  buttons?: InputMaybe<Array<InputMaybe<GlobalButtonsMutation>>>;
  header?: InputMaybe<GlobalHeaderMutation>;
  footer?: InputMaybe<GlobalFooterMutation>;
};

export type AuthorMutation = {
  name?: InputMaybe<Scalars['String']>;
  avatar?: InputMaybe<Scalars['String']>;
};

export type PageBlocksCardsStyleMutation = {
  padding?: InputMaybe<Scalars['String']>;
  contentWidth?: InputMaybe<Scalars['String']>;
  columns?: InputMaybe<Scalars['String']>;
  typographyTitle?: InputMaybe<Scalars['String']>;
  labelStyles?: InputMaybe<Scalars['String']>;
  headlineStyles?: InputMaybe<Scalars['String']>;
  subheadStyles?: InputMaybe<Scalars['String']>;
  textStyles?: InputMaybe<Scalars['String']>;
};

export type PageBlocksCardsCardStyleMutation = {
  fillStyles?: InputMaybe<Scalars['String']>;
  padding?: InputMaybe<Scalars['String']>;
  borderStyles?: InputMaybe<Scalars['String']>;
  imageStyles?: InputMaybe<Scalars['String']>;
  typographyTitle?: InputMaybe<Scalars['String']>;
  labelStyles?: InputMaybe<Scalars['String']>;
  headlineStyles?: InputMaybe<Scalars['String']>;
  subheadStyles?: InputMaybe<Scalars['String']>;
  textStyles?: InputMaybe<Scalars['String']>;
  buttonTitle?: InputMaybe<Scalars['String']>;
  buttonType?: InputMaybe<Scalars['String']>;
};

export type PageBlocksCardsBackgroundOrnamentsMutation = {
  src?: InputMaybe<Scalars['String']>;
  alignment?: InputMaybe<Scalars['String']>;
  width?: InputMaybe<Scalars['String']>;
  height?: InputMaybe<Scalars['String']>;
  xOffset?: InputMaybe<Scalars['String']>;
  yOffset?: InputMaybe<Scalars['String']>;
};

export type PageBlocksCardsBackgroundMutation = {
  fillStyles?: InputMaybe<Scalars['String']>;
  src?: InputMaybe<Scalars['String']>;
  position?: InputMaybe<Scalars['String']>;
  ornaments?: InputMaybe<Array<InputMaybe<PageBlocksCardsBackgroundOrnamentsMutation>>>;
};

export type PageBlocksCardsItemsImageMutation = {
  src?: InputMaybe<Scalars['String']>;
  alt?: InputMaybe<Scalars['String']>;
};

export type PageBlocksCardsItemsMutation = {
  image?: InputMaybe<PageBlocksCardsItemsImageMutation>;
  label?: InputMaybe<Scalars['String']>;
  headline?: InputMaybe<Scalars['String']>;
  subhead?: InputMaybe<Scalars['String']>;
  text?: InputMaybe<Scalars['JSON']>;
  link?: InputMaybe<Scalars['String']>;
  buttonLabel?: InputMaybe<Scalars['String']>;
};

export type PageBlocksCardsMutation = {
  style?: InputMaybe<PageBlocksCardsStyleMutation>;
  cardStyle?: InputMaybe<PageBlocksCardsCardStyleMutation>;
  background?: InputMaybe<PageBlocksCardsBackgroundMutation>;
  label?: InputMaybe<Scalars['String']>;
  headline?: InputMaybe<Scalars['String']>;
  subhead?: InputMaybe<Scalars['String']>;
  body?: InputMaybe<Scalars['JSON']>;
  items?: InputMaybe<Array<InputMaybe<PageBlocksCardsItemsMutation>>>;
  navigationLabel?: InputMaybe<Scalars['String']>;
};

export type PageBlocksEmbedStyleMutation = {
  fullWidth?: InputMaybe<Scalars['Boolean']>;
  minHeight?: InputMaybe<Scalars['String']>;
  padding?: InputMaybe<Scalars['String']>;
};

export type PageBlocksEmbedBackgroundOrnamentsMutation = {
  src?: InputMaybe<Scalars['String']>;
  alignment?: InputMaybe<Scalars['String']>;
  width?: InputMaybe<Scalars['String']>;
  height?: InputMaybe<Scalars['String']>;
  xOffset?: InputMaybe<Scalars['String']>;
  yOffset?: InputMaybe<Scalars['String']>;
};

export type PageBlocksEmbedBackgroundMutation = {
  fillStyles?: InputMaybe<Scalars['String']>;
  src?: InputMaybe<Scalars['String']>;
  position?: InputMaybe<Scalars['String']>;
  ornaments?: InputMaybe<Array<InputMaybe<PageBlocksEmbedBackgroundOrnamentsMutation>>>;
};

export type PageBlocksEmbedMutation = {
  style?: InputMaybe<PageBlocksEmbedStyleMutation>;
  background?: InputMaybe<PageBlocksEmbedBackgroundMutation>;
  markup?: InputMaybe<Scalars['String']>;
  navigationLabel?: InputMaybe<Scalars['String']>;
};

export type PageBlocksFeatureStyleMutation = {
  alignment?: InputMaybe<Scalars['String']>;
  padding?: InputMaybe<Scalars['String']>;
  featureImage?: InputMaybe<Scalars['String']>;
  featureContent?: InputMaybe<Scalars['String']>;
  typographyTitle?: InputMaybe<Scalars['String']>;
  labelStyles?: InputMaybe<Scalars['String']>;
  headlineStyles?: InputMaybe<Scalars['String']>;
  subheadStyles?: InputMaybe<Scalars['String']>;
  textStyles?: InputMaybe<Scalars['String']>;
};

export type PageBlocksFeatureBackgroundOrnamentsMutation = {
  src?: InputMaybe<Scalars['String']>;
  alignment?: InputMaybe<Scalars['String']>;
  width?: InputMaybe<Scalars['String']>;
  height?: InputMaybe<Scalars['String']>;
  xOffset?: InputMaybe<Scalars['String']>;
  yOffset?: InputMaybe<Scalars['String']>;
};

export type PageBlocksFeatureBackgroundMutation = {
  fillStyles?: InputMaybe<Scalars['String']>;
  src?: InputMaybe<Scalars['String']>;
  position?: InputMaybe<Scalars['String']>;
  ornaments?: InputMaybe<Array<InputMaybe<PageBlocksFeatureBackgroundOrnamentsMutation>>>;
};

export type PageBlocksFeatureImageMutation = {
  src?: InputMaybe<Scalars['String']>;
  alt?: InputMaybe<Scalars['String']>;
};

export type PageBlocksFeatureButtonsMutation = {
  label?: InputMaybe<Scalars['String']>;
  link?: InputMaybe<Scalars['String']>;
  buttonStyle?: InputMaybe<Scalars['String']>;
};

export type PageBlocksFeatureMutation = {
  style?: InputMaybe<PageBlocksFeatureStyleMutation>;
  background?: InputMaybe<PageBlocksFeatureBackgroundMutation>;
  image?: InputMaybe<PageBlocksFeatureImageMutation>;
  rule?: InputMaybe<Scalars['String']>;
  label?: InputMaybe<Scalars['String']>;
  headline?: InputMaybe<Scalars['String']>;
  subhead?: InputMaybe<Scalars['String']>;
  body?: InputMaybe<Scalars['JSON']>;
  buttons?: InputMaybe<Array<InputMaybe<PageBlocksFeatureButtonsMutation>>>;
  navigationLabel?: InputMaybe<Scalars['String']>;
};

export type PageBlocksTailwindFeatureTailwindMutation = {
  section?: InputMaybe<Scalars['String']>;
  wrap?: InputMaybe<Scalars['String']>;
  imageWrap?: InputMaybe<Scalars['String']>;
  image?: InputMaybe<Scalars['String']>;
  contentWrap?: InputMaybe<Scalars['String']>;
  content?: InputMaybe<Scalars['String']>;
  label?: InputMaybe<Scalars['String']>;
  headline?: InputMaybe<Scalars['String']>;
  subhead?: InputMaybe<Scalars['String']>;
  text?: InputMaybe<Scalars['String']>;
  buttons?: InputMaybe<Scalars['String']>;
  button?: InputMaybe<Scalars['String']>;
};

export type PageBlocksTailwindFeatureImageMutation = {
  src?: InputMaybe<Scalars['String']>;
  alt?: InputMaybe<Scalars['String']>;
};

export type PageBlocksTailwindFeatureBackgroundOrnamentsMutation = {
  src?: InputMaybe<Scalars['String']>;
  alignment?: InputMaybe<Scalars['String']>;
  width?: InputMaybe<Scalars['String']>;
  height?: InputMaybe<Scalars['String']>;
  xOffset?: InputMaybe<Scalars['String']>;
  yOffset?: InputMaybe<Scalars['String']>;
};

export type PageBlocksTailwindFeatureBackgroundMutation = {
  fillStyles?: InputMaybe<Scalars['String']>;
  src?: InputMaybe<Scalars['String']>;
  position?: InputMaybe<Scalars['String']>;
  ornaments?: InputMaybe<Array<InputMaybe<PageBlocksTailwindFeatureBackgroundOrnamentsMutation>>>;
};

export type PageBlocksTailwindFeatureButtonsMutation = {
  label?: InputMaybe<Scalars['String']>;
  link?: InputMaybe<Scalars['String']>;
};

export type PageBlocksTailwindFeatureMutation = {
  tailwind?: InputMaybe<PageBlocksTailwindFeatureTailwindMutation>;
  image?: InputMaybe<PageBlocksTailwindFeatureImageMutation>;
  background?: InputMaybe<PageBlocksTailwindFeatureBackgroundMutation>;
  rule?: InputMaybe<Scalars['String']>;
  label?: InputMaybe<Scalars['String']>;
  headline?: InputMaybe<Scalars['String']>;
  subhead?: InputMaybe<Scalars['String']>;
  body?: InputMaybe<Scalars['JSON']>;
  buttons?: InputMaybe<Array<InputMaybe<PageBlocksTailwindFeatureButtonsMutation>>>;
  rule2?: InputMaybe<Scalars['String']>;
  navigationLabel?: InputMaybe<Scalars['String']>;
};

export type PageBlocksTailwindCardsTailwindMutation = {
  section?: InputMaybe<Scalars['String']>;
  wrap?: InputMaybe<Scalars['String']>;
  imageWrap?: InputMaybe<Scalars['String']>;
  image?: InputMaybe<Scalars['String']>;
  contentWrap?: InputMaybe<Scalars['String']>;
  content?: InputMaybe<Scalars['String']>;
  label?: InputMaybe<Scalars['String']>;
  headline?: InputMaybe<Scalars['String']>;
  subhead?: InputMaybe<Scalars['String']>;
  text?: InputMaybe<Scalars['String']>;
  buttons?: InputMaybe<Scalars['String']>;
  button?: InputMaybe<Scalars['String']>;
  rule?: InputMaybe<Scalars['String']>;
  cardWrap?: InputMaybe<Scalars['String']>;
  card?: InputMaybe<Scalars['String']>;
  cardImageWrap?: InputMaybe<Scalars['String']>;
  cardImage?: InputMaybe<Scalars['String']>;
  cardContentWrap?: InputMaybe<Scalars['String']>;
  cardContent?: InputMaybe<Scalars['String']>;
  cardLabel?: InputMaybe<Scalars['String']>;
  cardHeadline?: InputMaybe<Scalars['String']>;
  cardSubhead?: InputMaybe<Scalars['String']>;
  cardText?: InputMaybe<Scalars['String']>;
  cardButtons?: InputMaybe<Scalars['String']>;
  cardButton?: InputMaybe<Scalars['String']>;
};

export type PageBlocksTailwindCardsImageMutation = {
  src?: InputMaybe<Scalars['String']>;
  alt?: InputMaybe<Scalars['String']>;
};

export type PageBlocksTailwindCardsBackgroundOrnamentsMutation = {
  src?: InputMaybe<Scalars['String']>;
  alignment?: InputMaybe<Scalars['String']>;
  width?: InputMaybe<Scalars['String']>;
  height?: InputMaybe<Scalars['String']>;
  xOffset?: InputMaybe<Scalars['String']>;
  yOffset?: InputMaybe<Scalars['String']>;
};

export type PageBlocksTailwindCardsBackgroundMutation = {
  fillStyles?: InputMaybe<Scalars['String']>;
  src?: InputMaybe<Scalars['String']>;
  position?: InputMaybe<Scalars['String']>;
  ornaments?: InputMaybe<Array<InputMaybe<PageBlocksTailwindCardsBackgroundOrnamentsMutation>>>;
};

export type PageBlocksTailwindCardsButtonsMutation = {
  label?: InputMaybe<Scalars['String']>;
  link?: InputMaybe<Scalars['String']>;
  buttonStyle?: InputMaybe<Scalars['String']>;
};

export type PageBlocksTailwindCardsItemsImageMutation = {
  src?: InputMaybe<Scalars['String']>;
  alt?: InputMaybe<Scalars['String']>;
};

export type PageBlocksTailwindCardsItemsMutation = {
  image?: InputMaybe<PageBlocksTailwindCardsItemsImageMutation>;
  label?: InputMaybe<Scalars['String']>;
  headline?: InputMaybe<Scalars['String']>;
  subhead?: InputMaybe<Scalars['String']>;
  text?: InputMaybe<Scalars['JSON']>;
  link?: InputMaybe<Scalars['String']>;
  buttonLabel?: InputMaybe<Scalars['String']>;
};

export type PageBlocksTailwindCardsMutation = {
  tailwind?: InputMaybe<PageBlocksTailwindCardsTailwindMutation>;
  image?: InputMaybe<PageBlocksTailwindCardsImageMutation>;
  background?: InputMaybe<PageBlocksTailwindCardsBackgroundMutation>;
  rule?: InputMaybe<Scalars['String']>;
  label?: InputMaybe<Scalars['String']>;
  headline?: InputMaybe<Scalars['String']>;
  subhead?: InputMaybe<Scalars['String']>;
  body?: InputMaybe<Scalars['JSON']>;
  buttons?: InputMaybe<Array<InputMaybe<PageBlocksTailwindCardsButtonsMutation>>>;
  items?: InputMaybe<Array<InputMaybe<PageBlocksTailwindCardsItemsMutation>>>;
  rule2?: InputMaybe<Scalars['String']>;
  navigationLabel?: InputMaybe<Scalars['String']>;
};

export type PageBlocksMutation = {
  cards?: InputMaybe<PageBlocksCardsMutation>;
  embed?: InputMaybe<PageBlocksEmbedMutation>;
  feature?: InputMaybe<PageBlocksFeatureMutation>;
  tailwindFeature?: InputMaybe<PageBlocksTailwindFeatureMutation>;
  tailwindCards?: InputMaybe<PageBlocksTailwindCardsMutation>;
};

export type PageMutation = {
  title?: InputMaybe<Scalars['String']>;
  blocks?: InputMaybe<Array<InputMaybe<PageBlocksMutation>>>;
};

export type LayoutQueryFragmentFragment = { __typename?: 'Query', global: { __typename?: 'Global', siteUrl?: string | null, gtmId?: string | null, favicon?: string | null, desktopWidth?: string | null, backgroundColor?: string | null, rule?: string | null, typography?: { __typename: 'GlobalTypography', headlineXs?: string | null, headlineSm?: string | null, headlineMd?: string | null, headlineLg?: string | null, headlineXl?: string | null, rule?: string | null, bodyXs?: string | null, bodySm?: string | null, bodyMd?: string | null, bodyLg?: string | null, bodyXl?: string | null } | null, colors?: { __typename: 'GlobalColors', primary?: string | null, accent1?: string | null, accent2?: string | null, accent3?: string | null, accent4?: string | null, white?: string | null, grayLight?: string | null, gray?: string | null, grayDark?: string | null, black?: string | null } | null, buttons?: Array<{ __typename: 'GlobalButtons', label?: string | null, fill?: string | null, typography?: string | null, padding?: string | null, primaryBorder?: string | null, primaryRounded?: string | null } | null> | null, header?: { __typename: 'GlobalHeader', color?: string | null, nav?: Array<{ __typename: 'GlobalHeaderNav', href?: string | null, label?: string | null } | null> | null } | null, footer?: { __typename: 'GlobalFooter', color?: string | null, social?: { __typename: 'GlobalFooterSocial', facebook?: string | null, twitter?: string | null, instagram?: string | null, github?: string | null } | null } | null } };

export type PageQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type PageQueryQuery = { __typename?: 'Query', postConnection: { __typename?: 'PostConnection', edges?: Array<{ __typename?: 'PostConnectionEdges', node?: { __typename?: 'Post', id: string, _values: any, author?: { __typename?: 'Author', name: string, avatar?: string | null } | null, _sys: { __typename?: 'SystemInfo', filename: string } } | null } | null> | null }, global: { __typename?: 'Global', siteUrl?: string | null, gtmId?: string | null, favicon?: string | null, desktopWidth?: string | null, backgroundColor?: string | null, rule?: string | null, typography?: { __typename: 'GlobalTypography', headlineXs?: string | null, headlineSm?: string | null, headlineMd?: string | null, headlineLg?: string | null, headlineXl?: string | null, rule?: string | null, bodyXs?: string | null, bodySm?: string | null, bodyMd?: string | null, bodyLg?: string | null, bodyXl?: string | null } | null, colors?: { __typename: 'GlobalColors', primary?: string | null, accent1?: string | null, accent2?: string | null, accent3?: string | null, accent4?: string | null, white?: string | null, grayLight?: string | null, gray?: string | null, grayDark?: string | null, black?: string | null } | null, buttons?: Array<{ __typename: 'GlobalButtons', label?: string | null, fill?: string | null, typography?: string | null, padding?: string | null, primaryBorder?: string | null, primaryRounded?: string | null } | null> | null, header?: { __typename: 'GlobalHeader', color?: string | null, nav?: Array<{ __typename: 'GlobalHeaderNav', href?: string | null, label?: string | null } | null> | null } | null, footer?: { __typename: 'GlobalFooter', color?: string | null, social?: { __typename: 'GlobalFooterSocial', facebook?: string | null, twitter?: string | null, instagram?: string | null, github?: string | null } | null } | null } };

export type ContentQueryQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type ContentQueryQuery = { __typename?: 'Query', page: { __typename?: 'Page', title: string, blocks?: Array<{ __typename: 'PageBlocksCards', label?: string | null, headline?: string | null, subhead?: string | null, body?: any | null, navigationLabel?: string | null, style?: { __typename: 'PageBlocksCardsStyle', padding?: string | null, contentWidth?: string | null, columns?: string | null, typographyTitle?: string | null, labelStyles?: string | null, headlineStyles?: string | null, subheadStyles?: string | null, textStyles?: string | null } | null, cardStyle?: { __typename: 'PageBlocksCardsCardStyle', fillStyles?: string | null, padding?: string | null, borderStyles?: string | null, imageStyles?: string | null, typographyTitle?: string | null, labelStyles?: string | null, headlineStyles?: string | null, subheadStyles?: string | null, textStyles?: string | null, buttonTitle?: string | null, buttonType?: string | null } | null, background?: { __typename: 'PageBlocksCardsBackground', fillStyles?: string | null, src?: string | null, position?: string | null, ornaments?: Array<{ __typename: 'PageBlocksCardsBackgroundOrnaments', src?: string | null, alignment?: string | null, width?: string | null, height?: string | null, xOffset?: string | null, yOffset?: string | null } | null> | null } | null, items?: Array<{ __typename: 'PageBlocksCardsItems', label?: string | null, headline?: string | null, subhead?: string | null, text?: any | null, link?: string | null, buttonLabel?: string | null, image?: { __typename: 'PageBlocksCardsItemsImage', src?: string | null, alt?: string | null } | null } | null> | null } | { __typename: 'PageBlocksEmbed', markup?: string | null, navigationLabel?: string | null, style?: { __typename: 'PageBlocksEmbedStyle', fullWidth?: boolean | null, minHeight?: string | null, padding?: string | null } | null, background?: { __typename: 'PageBlocksEmbedBackground', fillStyles?: string | null, src?: string | null, position?: string | null, ornaments?: Array<{ __typename: 'PageBlocksEmbedBackgroundOrnaments', src?: string | null, alignment?: string | null, width?: string | null, height?: string | null, xOffset?: string | null, yOffset?: string | null } | null> | null } | null } | { __typename: 'PageBlocksFeature', rule?: string | null, label?: string | null, headline?: string | null, subhead?: string | null, body?: any | null, navigationLabel?: string | null, style?: { __typename: 'PageBlocksFeatureStyle', alignment?: string | null, padding?: string | null, featureImage?: string | null, featureContent?: string | null, typographyTitle?: string | null, labelStyles?: string | null, headlineStyles?: string | null, subheadStyles?: string | null, textStyles?: string | null } | null, background?: { __typename: 'PageBlocksFeatureBackground', fillStyles?: string | null, src?: string | null, position?: string | null, ornaments?: Array<{ __typename: 'PageBlocksFeatureBackgroundOrnaments', src?: string | null, alignment?: string | null, width?: string | null, height?: string | null, xOffset?: string | null, yOffset?: string | null } | null> | null } | null, image?: { __typename: 'PageBlocksFeatureImage', src?: string | null, alt?: string | null } | null, buttons?: Array<{ __typename: 'PageBlocksFeatureButtons', label?: string | null, link?: string | null, buttonStyle?: string | null } | null> | null } | { __typename: 'PageBlocksTailwindFeature', rule?: string | null, label?: string | null, headline?: string | null, subhead?: string | null, body?: any | null, rule2?: string | null, navigationLabel?: string | null, tailwind?: { __typename: 'PageBlocksTailwindFeatureTailwind', section?: string | null, wrap?: string | null, imageWrap?: string | null, image?: string | null, contentWrap?: string | null, content?: string | null, label?: string | null, headline?: string | null, subhead?: string | null, text?: string | null, buttons?: string | null, button?: string | null } | null, image?: { __typename: 'PageBlocksTailwindFeatureImage', src?: string | null, alt?: string | null } | null, background?: { __typename: 'PageBlocksTailwindFeatureBackground', fillStyles?: string | null, src?: string | null, position?: string | null, ornaments?: Array<{ __typename: 'PageBlocksTailwindFeatureBackgroundOrnaments', src?: string | null, alignment?: string | null, width?: string | null, height?: string | null, xOffset?: string | null, yOffset?: string | null } | null> | null } | null, buttons?: Array<{ __typename: 'PageBlocksTailwindFeatureButtons', label?: string | null, link?: string | null } | null> | null } | { __typename: 'PageBlocksTailwindCards', rule?: string | null, label?: string | null, headline?: string | null, subhead?: string | null, body?: any | null, rule2?: string | null, navigationLabel?: string | null, tailwind?: { __typename: 'PageBlocksTailwindCardsTailwind', section?: string | null, wrap?: string | null, imageWrap?: string | null, image?: string | null, contentWrap?: string | null, content?: string | null, label?: string | null, headline?: string | null, subhead?: string | null, text?: string | null, buttons?: string | null, button?: string | null, rule?: string | null, cardWrap?: string | null, card?: string | null, cardImageWrap?: string | null, cardImage?: string | null, cardContentWrap?: string | null, cardContent?: string | null, cardLabel?: string | null, cardHeadline?: string | null, cardSubhead?: string | null, cardText?: string | null, cardButtons?: string | null, cardButton?: string | null } | null, image?: { __typename: 'PageBlocksTailwindCardsImage', src?: string | null, alt?: string | null } | null, background?: { __typename: 'PageBlocksTailwindCardsBackground', fillStyles?: string | null, src?: string | null, position?: string | null, ornaments?: Array<{ __typename: 'PageBlocksTailwindCardsBackgroundOrnaments', src?: string | null, alignment?: string | null, width?: string | null, height?: string | null, xOffset?: string | null, yOffset?: string | null } | null> | null } | null, buttons?: Array<{ __typename: 'PageBlocksTailwindCardsButtons', label?: string | null, link?: string | null, buttonStyle?: string | null } | null> | null, items?: Array<{ __typename: 'PageBlocksTailwindCardsItems', label?: string | null, headline?: string | null, subhead?: string | null, text?: any | null, link?: string | null, buttonLabel?: string | null, image?: { __typename: 'PageBlocksTailwindCardsItemsImage', src?: string | null, alt?: string | null } | null } | null> | null } | null> | null }, global: { __typename?: 'Global', siteUrl?: string | null, gtmId?: string | null, favicon?: string | null, desktopWidth?: string | null, backgroundColor?: string | null, rule?: string | null, typography?: { __typename: 'GlobalTypography', headlineXs?: string | null, headlineSm?: string | null, headlineMd?: string | null, headlineLg?: string | null, headlineXl?: string | null, rule?: string | null, bodyXs?: string | null, bodySm?: string | null, bodyMd?: string | null, bodyLg?: string | null, bodyXl?: string | null } | null, colors?: { __typename: 'GlobalColors', primary?: string | null, accent1?: string | null, accent2?: string | null, accent3?: string | null, accent4?: string | null, white?: string | null, grayLight?: string | null, gray?: string | null, grayDark?: string | null, black?: string | null } | null, buttons?: Array<{ __typename: 'GlobalButtons', label?: string | null, fill?: string | null, typography?: string | null, padding?: string | null, primaryBorder?: string | null, primaryRounded?: string | null } | null> | null, header?: { __typename: 'GlobalHeader', color?: string | null, nav?: Array<{ __typename: 'GlobalHeaderNav', href?: string | null, label?: string | null } | null> | null } | null, footer?: { __typename: 'GlobalFooter', color?: string | null, social?: { __typename: 'GlobalFooterSocial', facebook?: string | null, twitter?: string | null, instagram?: string | null, github?: string | null } | null } | null } };

export type BlogPostQueryQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type BlogPostQueryQuery = { __typename?: 'Query', post: { __typename?: 'Post', title: string, heroImg?: string | null, excerpt?: any | null, date?: string | null, _body?: any | null, author?: { __typename?: 'Author', name: string, avatar?: string | null, id: string } | null }, global: { __typename?: 'Global', siteUrl?: string | null, gtmId?: string | null, favicon?: string | null, desktopWidth?: string | null, backgroundColor?: string | null, rule?: string | null, typography?: { __typename: 'GlobalTypography', headlineXs?: string | null, headlineSm?: string | null, headlineMd?: string | null, headlineLg?: string | null, headlineXl?: string | null, rule?: string | null, bodyXs?: string | null, bodySm?: string | null, bodyMd?: string | null, bodyLg?: string | null, bodyXl?: string | null } | null, colors?: { __typename: 'GlobalColors', primary?: string | null, accent1?: string | null, accent2?: string | null, accent3?: string | null, accent4?: string | null, white?: string | null, grayLight?: string | null, gray?: string | null, grayDark?: string | null, black?: string | null } | null, buttons?: Array<{ __typename: 'GlobalButtons', label?: string | null, fill?: string | null, typography?: string | null, padding?: string | null, primaryBorder?: string | null, primaryRounded?: string | null } | null> | null, header?: { __typename: 'GlobalHeader', color?: string | null, nav?: Array<{ __typename: 'GlobalHeaderNav', href?: string | null, label?: string | null } | null> | null } | null, footer?: { __typename: 'GlobalFooter', color?: string | null, social?: { __typename: 'GlobalFooterSocial', facebook?: string | null, twitter?: string | null, instagram?: string | null, github?: string | null } | null } | null } };

export type PostPartsFragment = { __typename?: 'Post', title: string, heroImg?: string | null, excerpt?: any | null, date?: string | null, _body?: any | null, author?: { __typename?: 'Author', name: string, avatar?: string | null, id: string } | null };

export type GlobalPartsFragment = { __typename?: 'Global', siteUrl?: string | null, gtmId?: string | null, favicon?: string | null, desktopWidth?: string | null, backgroundColor?: string | null, rule?: string | null, typography?: { __typename: 'GlobalTypography', headlineXs?: string | null, headlineSm?: string | null, headlineMd?: string | null, headlineLg?: string | null, headlineXl?: string | null, rule?: string | null, bodyXs?: string | null, bodySm?: string | null, bodyMd?: string | null, bodyLg?: string | null, bodyXl?: string | null } | null, colors?: { __typename: 'GlobalColors', primary?: string | null, accent1?: string | null, accent2?: string | null, accent3?: string | null, accent4?: string | null, white?: string | null, grayLight?: string | null, gray?: string | null, grayDark?: string | null, black?: string | null } | null, buttons?: Array<{ __typename: 'GlobalButtons', label?: string | null, fill?: string | null, typography?: string | null, padding?: string | null, primaryBorder?: string | null, primaryRounded?: string | null } | null> | null, header?: { __typename: 'GlobalHeader', color?: string | null, nav?: Array<{ __typename: 'GlobalHeaderNav', href?: string | null, label?: string | null } | null> | null } | null, footer?: { __typename: 'GlobalFooter', color?: string | null, social?: { __typename: 'GlobalFooterSocial', facebook?: string | null, twitter?: string | null, instagram?: string | null, github?: string | null } | null } | null };

export type AuthorPartsFragment = { __typename?: 'Author', name: string, avatar?: string | null };

export type PagePartsFragment = { __typename?: 'Page', title: string, blocks?: Array<{ __typename: 'PageBlocksCards', label?: string | null, headline?: string | null, subhead?: string | null, body?: any | null, navigationLabel?: string | null, style?: { __typename: 'PageBlocksCardsStyle', padding?: string | null, contentWidth?: string | null, columns?: string | null, typographyTitle?: string | null, labelStyles?: string | null, headlineStyles?: string | null, subheadStyles?: string | null, textStyles?: string | null } | null, cardStyle?: { __typename: 'PageBlocksCardsCardStyle', fillStyles?: string | null, padding?: string | null, borderStyles?: string | null, imageStyles?: string | null, typographyTitle?: string | null, labelStyles?: string | null, headlineStyles?: string | null, subheadStyles?: string | null, textStyles?: string | null, buttonTitle?: string | null, buttonType?: string | null } | null, background?: { __typename: 'PageBlocksCardsBackground', fillStyles?: string | null, src?: string | null, position?: string | null, ornaments?: Array<{ __typename: 'PageBlocksCardsBackgroundOrnaments', src?: string | null, alignment?: string | null, width?: string | null, height?: string | null, xOffset?: string | null, yOffset?: string | null } | null> | null } | null, items?: Array<{ __typename: 'PageBlocksCardsItems', label?: string | null, headline?: string | null, subhead?: string | null, text?: any | null, link?: string | null, buttonLabel?: string | null, image?: { __typename: 'PageBlocksCardsItemsImage', src?: string | null, alt?: string | null } | null } | null> | null } | { __typename: 'PageBlocksEmbed', markup?: string | null, navigationLabel?: string | null, style?: { __typename: 'PageBlocksEmbedStyle', fullWidth?: boolean | null, minHeight?: string | null, padding?: string | null } | null, background?: { __typename: 'PageBlocksEmbedBackground', fillStyles?: string | null, src?: string | null, position?: string | null, ornaments?: Array<{ __typename: 'PageBlocksEmbedBackgroundOrnaments', src?: string | null, alignment?: string | null, width?: string | null, height?: string | null, xOffset?: string | null, yOffset?: string | null } | null> | null } | null } | { __typename: 'PageBlocksFeature', rule?: string | null, label?: string | null, headline?: string | null, subhead?: string | null, body?: any | null, navigationLabel?: string | null, style?: { __typename: 'PageBlocksFeatureStyle', alignment?: string | null, padding?: string | null, featureImage?: string | null, featureContent?: string | null, typographyTitle?: string | null, labelStyles?: string | null, headlineStyles?: string | null, subheadStyles?: string | null, textStyles?: string | null } | null, background?: { __typename: 'PageBlocksFeatureBackground', fillStyles?: string | null, src?: string | null, position?: string | null, ornaments?: Array<{ __typename: 'PageBlocksFeatureBackgroundOrnaments', src?: string | null, alignment?: string | null, width?: string | null, height?: string | null, xOffset?: string | null, yOffset?: string | null } | null> | null } | null, image?: { __typename: 'PageBlocksFeatureImage', src?: string | null, alt?: string | null } | null, buttons?: Array<{ __typename: 'PageBlocksFeatureButtons', label?: string | null, link?: string | null, buttonStyle?: string | null } | null> | null } | { __typename: 'PageBlocksTailwindFeature', rule?: string | null, label?: string | null, headline?: string | null, subhead?: string | null, body?: any | null, rule2?: string | null, navigationLabel?: string | null, tailwind?: { __typename: 'PageBlocksTailwindFeatureTailwind', section?: string | null, wrap?: string | null, imageWrap?: string | null, image?: string | null, contentWrap?: string | null, content?: string | null, label?: string | null, headline?: string | null, subhead?: string | null, text?: string | null, buttons?: string | null, button?: string | null } | null, image?: { __typename: 'PageBlocksTailwindFeatureImage', src?: string | null, alt?: string | null } | null, background?: { __typename: 'PageBlocksTailwindFeatureBackground', fillStyles?: string | null, src?: string | null, position?: string | null, ornaments?: Array<{ __typename: 'PageBlocksTailwindFeatureBackgroundOrnaments', src?: string | null, alignment?: string | null, width?: string | null, height?: string | null, xOffset?: string | null, yOffset?: string | null } | null> | null } | null, buttons?: Array<{ __typename: 'PageBlocksTailwindFeatureButtons', label?: string | null, link?: string | null } | null> | null } | { __typename: 'PageBlocksTailwindCards', rule?: string | null, label?: string | null, headline?: string | null, subhead?: string | null, body?: any | null, rule2?: string | null, navigationLabel?: string | null, tailwind?: { __typename: 'PageBlocksTailwindCardsTailwind', section?: string | null, wrap?: string | null, imageWrap?: string | null, image?: string | null, contentWrap?: string | null, content?: string | null, label?: string | null, headline?: string | null, subhead?: string | null, text?: string | null, buttons?: string | null, button?: string | null, rule?: string | null, cardWrap?: string | null, card?: string | null, cardImageWrap?: string | null, cardImage?: string | null, cardContentWrap?: string | null, cardContent?: string | null, cardLabel?: string | null, cardHeadline?: string | null, cardSubhead?: string | null, cardText?: string | null, cardButtons?: string | null, cardButton?: string | null } | null, image?: { __typename: 'PageBlocksTailwindCardsImage', src?: string | null, alt?: string | null } | null, background?: { __typename: 'PageBlocksTailwindCardsBackground', fillStyles?: string | null, src?: string | null, position?: string | null, ornaments?: Array<{ __typename: 'PageBlocksTailwindCardsBackgroundOrnaments', src?: string | null, alignment?: string | null, width?: string | null, height?: string | null, xOffset?: string | null, yOffset?: string | null } | null> | null } | null, buttons?: Array<{ __typename: 'PageBlocksTailwindCardsButtons', label?: string | null, link?: string | null, buttonStyle?: string | null } | null> | null, items?: Array<{ __typename: 'PageBlocksTailwindCardsItems', label?: string | null, headline?: string | null, subhead?: string | null, text?: any | null, link?: string | null, buttonLabel?: string | null, image?: { __typename: 'PageBlocksTailwindCardsItemsImage', src?: string | null, alt?: string | null } | null } | null> | null } | null> | null };

export type PostQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type PostQuery = { __typename?: 'Query', post: { __typename?: 'Post', id: string, title: string, heroImg?: string | null, excerpt?: any | null, date?: string | null, _body?: any | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, author?: { __typename?: 'Author', name: string, avatar?: string | null, id: string } | null } };

export type PostConnectionQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<PostFilter>;
}>;


export type PostConnectionQuery = { __typename?: 'Query', postConnection: { __typename?: 'PostConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'PostConnectionEdges', cursor: string, node?: { __typename?: 'Post', id: string, title: string, heroImg?: string | null, excerpt?: any | null, date?: string | null, _body?: any | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, author?: { __typename?: 'Author', name: string, avatar?: string | null, id: string } | null } | null } | null> | null } };

export type GlobalQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type GlobalQuery = { __typename?: 'Query', global: { __typename?: 'Global', id: string, siteUrl?: string | null, gtmId?: string | null, favicon?: string | null, desktopWidth?: string | null, backgroundColor?: string | null, rule?: string | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, typography?: { __typename: 'GlobalTypography', headlineXs?: string | null, headlineSm?: string | null, headlineMd?: string | null, headlineLg?: string | null, headlineXl?: string | null, rule?: string | null, bodyXs?: string | null, bodySm?: string | null, bodyMd?: string | null, bodyLg?: string | null, bodyXl?: string | null } | null, colors?: { __typename: 'GlobalColors', primary?: string | null, accent1?: string | null, accent2?: string | null, accent3?: string | null, accent4?: string | null, white?: string | null, grayLight?: string | null, gray?: string | null, grayDark?: string | null, black?: string | null } | null, buttons?: Array<{ __typename: 'GlobalButtons', label?: string | null, fill?: string | null, typography?: string | null, padding?: string | null, primaryBorder?: string | null, primaryRounded?: string | null } | null> | null, header?: { __typename: 'GlobalHeader', color?: string | null, nav?: Array<{ __typename: 'GlobalHeaderNav', href?: string | null, label?: string | null } | null> | null } | null, footer?: { __typename: 'GlobalFooter', color?: string | null, social?: { __typename: 'GlobalFooterSocial', facebook?: string | null, twitter?: string | null, instagram?: string | null, github?: string | null } | null } | null } };

export type GlobalConnectionQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<GlobalFilter>;
}>;


export type GlobalConnectionQuery = { __typename?: 'Query', globalConnection: { __typename?: 'GlobalConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'GlobalConnectionEdges', cursor: string, node?: { __typename?: 'Global', id: string, siteUrl?: string | null, gtmId?: string | null, favicon?: string | null, desktopWidth?: string | null, backgroundColor?: string | null, rule?: string | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, typography?: { __typename: 'GlobalTypography', headlineXs?: string | null, headlineSm?: string | null, headlineMd?: string | null, headlineLg?: string | null, headlineXl?: string | null, rule?: string | null, bodyXs?: string | null, bodySm?: string | null, bodyMd?: string | null, bodyLg?: string | null, bodyXl?: string | null } | null, colors?: { __typename: 'GlobalColors', primary?: string | null, accent1?: string | null, accent2?: string | null, accent3?: string | null, accent4?: string | null, white?: string | null, grayLight?: string | null, gray?: string | null, grayDark?: string | null, black?: string | null } | null, buttons?: Array<{ __typename: 'GlobalButtons', label?: string | null, fill?: string | null, typography?: string | null, padding?: string | null, primaryBorder?: string | null, primaryRounded?: string | null } | null> | null, header?: { __typename: 'GlobalHeader', color?: string | null, nav?: Array<{ __typename: 'GlobalHeaderNav', href?: string | null, label?: string | null } | null> | null } | null, footer?: { __typename: 'GlobalFooter', color?: string | null, social?: { __typename: 'GlobalFooterSocial', facebook?: string | null, twitter?: string | null, instagram?: string | null, github?: string | null } | null } | null } | null } | null> | null } };

export type AuthorQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type AuthorQuery = { __typename?: 'Query', author: { __typename?: 'Author', id: string, name: string, avatar?: string | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } };

export type AuthorConnectionQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<AuthorFilter>;
}>;


export type AuthorConnectionQuery = { __typename?: 'Query', authorConnection: { __typename?: 'AuthorConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'AuthorConnectionEdges', cursor: string, node?: { __typename?: 'Author', id: string, name: string, avatar?: string | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } | null } | null> | null } };

export type PageQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type PageQuery = { __typename?: 'Query', page: { __typename?: 'Page', id: string, title: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, blocks?: Array<{ __typename: 'PageBlocksCards', label?: string | null, headline?: string | null, subhead?: string | null, body?: any | null, navigationLabel?: string | null, style?: { __typename: 'PageBlocksCardsStyle', padding?: string | null, contentWidth?: string | null, columns?: string | null, typographyTitle?: string | null, labelStyles?: string | null, headlineStyles?: string | null, subheadStyles?: string | null, textStyles?: string | null } | null, cardStyle?: { __typename: 'PageBlocksCardsCardStyle', fillStyles?: string | null, padding?: string | null, borderStyles?: string | null, imageStyles?: string | null, typographyTitle?: string | null, labelStyles?: string | null, headlineStyles?: string | null, subheadStyles?: string | null, textStyles?: string | null, buttonTitle?: string | null, buttonType?: string | null } | null, background?: { __typename: 'PageBlocksCardsBackground', fillStyles?: string | null, src?: string | null, position?: string | null, ornaments?: Array<{ __typename: 'PageBlocksCardsBackgroundOrnaments', src?: string | null, alignment?: string | null, width?: string | null, height?: string | null, xOffset?: string | null, yOffset?: string | null } | null> | null } | null, items?: Array<{ __typename: 'PageBlocksCardsItems', label?: string | null, headline?: string | null, subhead?: string | null, text?: any | null, link?: string | null, buttonLabel?: string | null, image?: { __typename: 'PageBlocksCardsItemsImage', src?: string | null, alt?: string | null } | null } | null> | null } | { __typename: 'PageBlocksEmbed', markup?: string | null, navigationLabel?: string | null, style?: { __typename: 'PageBlocksEmbedStyle', fullWidth?: boolean | null, minHeight?: string | null, padding?: string | null } | null, background?: { __typename: 'PageBlocksEmbedBackground', fillStyles?: string | null, src?: string | null, position?: string | null, ornaments?: Array<{ __typename: 'PageBlocksEmbedBackgroundOrnaments', src?: string | null, alignment?: string | null, width?: string | null, height?: string | null, xOffset?: string | null, yOffset?: string | null } | null> | null } | null } | { __typename: 'PageBlocksFeature', rule?: string | null, label?: string | null, headline?: string | null, subhead?: string | null, body?: any | null, navigationLabel?: string | null, style?: { __typename: 'PageBlocksFeatureStyle', alignment?: string | null, padding?: string | null, featureImage?: string | null, featureContent?: string | null, typographyTitle?: string | null, labelStyles?: string | null, headlineStyles?: string | null, subheadStyles?: string | null, textStyles?: string | null } | null, background?: { __typename: 'PageBlocksFeatureBackground', fillStyles?: string | null, src?: string | null, position?: string | null, ornaments?: Array<{ __typename: 'PageBlocksFeatureBackgroundOrnaments', src?: string | null, alignment?: string | null, width?: string | null, height?: string | null, xOffset?: string | null, yOffset?: string | null } | null> | null } | null, image?: { __typename: 'PageBlocksFeatureImage', src?: string | null, alt?: string | null } | null, buttons?: Array<{ __typename: 'PageBlocksFeatureButtons', label?: string | null, link?: string | null, buttonStyle?: string | null } | null> | null } | { __typename: 'PageBlocksTailwindFeature', rule?: string | null, label?: string | null, headline?: string | null, subhead?: string | null, body?: any | null, rule2?: string | null, navigationLabel?: string | null, tailwind?: { __typename: 'PageBlocksTailwindFeatureTailwind', section?: string | null, wrap?: string | null, imageWrap?: string | null, image?: string | null, contentWrap?: string | null, content?: string | null, label?: string | null, headline?: string | null, subhead?: string | null, text?: string | null, buttons?: string | null, button?: string | null } | null, image?: { __typename: 'PageBlocksTailwindFeatureImage', src?: string | null, alt?: string | null } | null, background?: { __typename: 'PageBlocksTailwindFeatureBackground', fillStyles?: string | null, src?: string | null, position?: string | null, ornaments?: Array<{ __typename: 'PageBlocksTailwindFeatureBackgroundOrnaments', src?: string | null, alignment?: string | null, width?: string | null, height?: string | null, xOffset?: string | null, yOffset?: string | null } | null> | null } | null, buttons?: Array<{ __typename: 'PageBlocksTailwindFeatureButtons', label?: string | null, link?: string | null } | null> | null } | { __typename: 'PageBlocksTailwindCards', rule?: string | null, label?: string | null, headline?: string | null, subhead?: string | null, body?: any | null, rule2?: string | null, navigationLabel?: string | null, tailwind?: { __typename: 'PageBlocksTailwindCardsTailwind', section?: string | null, wrap?: string | null, imageWrap?: string | null, image?: string | null, contentWrap?: string | null, content?: string | null, label?: string | null, headline?: string | null, subhead?: string | null, text?: string | null, buttons?: string | null, button?: string | null, rule?: string | null, cardWrap?: string | null, card?: string | null, cardImageWrap?: string | null, cardImage?: string | null, cardContentWrap?: string | null, cardContent?: string | null, cardLabel?: string | null, cardHeadline?: string | null, cardSubhead?: string | null, cardText?: string | null, cardButtons?: string | null, cardButton?: string | null } | null, image?: { __typename: 'PageBlocksTailwindCardsImage', src?: string | null, alt?: string | null } | null, background?: { __typename: 'PageBlocksTailwindCardsBackground', fillStyles?: string | null, src?: string | null, position?: string | null, ornaments?: Array<{ __typename: 'PageBlocksTailwindCardsBackgroundOrnaments', src?: string | null, alignment?: string | null, width?: string | null, height?: string | null, xOffset?: string | null, yOffset?: string | null } | null> | null } | null, buttons?: Array<{ __typename: 'PageBlocksTailwindCardsButtons', label?: string | null, link?: string | null, buttonStyle?: string | null } | null> | null, items?: Array<{ __typename: 'PageBlocksTailwindCardsItems', label?: string | null, headline?: string | null, subhead?: string | null, text?: any | null, link?: string | null, buttonLabel?: string | null, image?: { __typename: 'PageBlocksTailwindCardsItemsImage', src?: string | null, alt?: string | null } | null } | null> | null } | null> | null } };

export type PageConnectionQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<PageFilter>;
}>;


export type PageConnectionQuery = { __typename?: 'Query', pageConnection: { __typename?: 'PageConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'PageConnectionEdges', cursor: string, node?: { __typename?: 'Page', id: string, title: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, blocks?: Array<{ __typename: 'PageBlocksCards', label?: string | null, headline?: string | null, subhead?: string | null, body?: any | null, navigationLabel?: string | null, style?: { __typename: 'PageBlocksCardsStyle', padding?: string | null, contentWidth?: string | null, columns?: string | null, typographyTitle?: string | null, labelStyles?: string | null, headlineStyles?: string | null, subheadStyles?: string | null, textStyles?: string | null } | null, cardStyle?: { __typename: 'PageBlocksCardsCardStyle', fillStyles?: string | null, padding?: string | null, borderStyles?: string | null, imageStyles?: string | null, typographyTitle?: string | null, labelStyles?: string | null, headlineStyles?: string | null, subheadStyles?: string | null, textStyles?: string | null, buttonTitle?: string | null, buttonType?: string | null } | null, background?: { __typename: 'PageBlocksCardsBackground', fillStyles?: string | null, src?: string | null, position?: string | null, ornaments?: Array<{ __typename: 'PageBlocksCardsBackgroundOrnaments', src?: string | null, alignment?: string | null, width?: string | null, height?: string | null, xOffset?: string | null, yOffset?: string | null } | null> | null } | null, items?: Array<{ __typename: 'PageBlocksCardsItems', label?: string | null, headline?: string | null, subhead?: string | null, text?: any | null, link?: string | null, buttonLabel?: string | null, image?: { __typename: 'PageBlocksCardsItemsImage', src?: string | null, alt?: string | null } | null } | null> | null } | { __typename: 'PageBlocksEmbed', markup?: string | null, navigationLabel?: string | null, style?: { __typename: 'PageBlocksEmbedStyle', fullWidth?: boolean | null, minHeight?: string | null, padding?: string | null } | null, background?: { __typename: 'PageBlocksEmbedBackground', fillStyles?: string | null, src?: string | null, position?: string | null, ornaments?: Array<{ __typename: 'PageBlocksEmbedBackgroundOrnaments', src?: string | null, alignment?: string | null, width?: string | null, height?: string | null, xOffset?: string | null, yOffset?: string | null } | null> | null } | null } | { __typename: 'PageBlocksFeature', rule?: string | null, label?: string | null, headline?: string | null, subhead?: string | null, body?: any | null, navigationLabel?: string | null, style?: { __typename: 'PageBlocksFeatureStyle', alignment?: string | null, padding?: string | null, featureImage?: string | null, featureContent?: string | null, typographyTitle?: string | null, labelStyles?: string | null, headlineStyles?: string | null, subheadStyles?: string | null, textStyles?: string | null } | null, background?: { __typename: 'PageBlocksFeatureBackground', fillStyles?: string | null, src?: string | null, position?: string | null, ornaments?: Array<{ __typename: 'PageBlocksFeatureBackgroundOrnaments', src?: string | null, alignment?: string | null, width?: string | null, height?: string | null, xOffset?: string | null, yOffset?: string | null } | null> | null } | null, image?: { __typename: 'PageBlocksFeatureImage', src?: string | null, alt?: string | null } | null, buttons?: Array<{ __typename: 'PageBlocksFeatureButtons', label?: string | null, link?: string | null, buttonStyle?: string | null } | null> | null } | { __typename: 'PageBlocksTailwindFeature', rule?: string | null, label?: string | null, headline?: string | null, subhead?: string | null, body?: any | null, rule2?: string | null, navigationLabel?: string | null, tailwind?: { __typename: 'PageBlocksTailwindFeatureTailwind', section?: string | null, wrap?: string | null, imageWrap?: string | null, image?: string | null, contentWrap?: string | null, content?: string | null, label?: string | null, headline?: string | null, subhead?: string | null, text?: string | null, buttons?: string | null, button?: string | null } | null, image?: { __typename: 'PageBlocksTailwindFeatureImage', src?: string | null, alt?: string | null } | null, background?: { __typename: 'PageBlocksTailwindFeatureBackground', fillStyles?: string | null, src?: string | null, position?: string | null, ornaments?: Array<{ __typename: 'PageBlocksTailwindFeatureBackgroundOrnaments', src?: string | null, alignment?: string | null, width?: string | null, height?: string | null, xOffset?: string | null, yOffset?: string | null } | null> | null } | null, buttons?: Array<{ __typename: 'PageBlocksTailwindFeatureButtons', label?: string | null, link?: string | null } | null> | null } | { __typename: 'PageBlocksTailwindCards', rule?: string | null, label?: string | null, headline?: string | null, subhead?: string | null, body?: any | null, rule2?: string | null, navigationLabel?: string | null, tailwind?: { __typename: 'PageBlocksTailwindCardsTailwind', section?: string | null, wrap?: string | null, imageWrap?: string | null, image?: string | null, contentWrap?: string | null, content?: string | null, label?: string | null, headline?: string | null, subhead?: string | null, text?: string | null, buttons?: string | null, button?: string | null, rule?: string | null, cardWrap?: string | null, card?: string | null, cardImageWrap?: string | null, cardImage?: string | null, cardContentWrap?: string | null, cardContent?: string | null, cardLabel?: string | null, cardHeadline?: string | null, cardSubhead?: string | null, cardText?: string | null, cardButtons?: string | null, cardButton?: string | null } | null, image?: { __typename: 'PageBlocksTailwindCardsImage', src?: string | null, alt?: string | null } | null, background?: { __typename: 'PageBlocksTailwindCardsBackground', fillStyles?: string | null, src?: string | null, position?: string | null, ornaments?: Array<{ __typename: 'PageBlocksTailwindCardsBackgroundOrnaments', src?: string | null, alignment?: string | null, width?: string | null, height?: string | null, xOffset?: string | null, yOffset?: string | null } | null> | null } | null, buttons?: Array<{ __typename: 'PageBlocksTailwindCardsButtons', label?: string | null, link?: string | null, buttonStyle?: string | null } | null> | null, items?: Array<{ __typename: 'PageBlocksTailwindCardsItems', label?: string | null, headline?: string | null, subhead?: string | null, text?: any | null, link?: string | null, buttonLabel?: string | null, image?: { __typename: 'PageBlocksTailwindCardsItemsImage', src?: string | null, alt?: string | null } | null } | null> | null } | null> | null } | null } | null> | null } };

export const GlobalPartsFragmentDoc = gql`
    fragment GlobalParts on Global {
  siteUrl
  gtmId
  favicon
  desktopWidth
  backgroundColor
  rule
  typography {
    __typename
    headlineXs
    headlineSm
    headlineMd
    headlineLg
    headlineXl
    rule
    bodyXs
    bodySm
    bodyMd
    bodyLg
    bodyXl
  }
  colors {
    __typename
    primary
    accent1
    accent2
    accent3
    accent4
    white
    grayLight
    gray
    grayDark
    black
  }
  buttons {
    __typename
    label
    fill
    typography
    padding
    primaryBorder
    primaryRounded
  }
  header {
    __typename
    color
    nav {
      __typename
      href
      label
    }
  }
  footer {
    __typename
    color
    social {
      __typename
      facebook
      twitter
      instagram
      github
    }
  }
}
    `;
export const LayoutQueryFragmentFragmentDoc = gql`
    fragment LayoutQueryFragment on Query {
  global(relativePath: "index.json") {
    ...GlobalParts
  }
}
    ${GlobalPartsFragmentDoc}`;
export const PostPartsFragmentDoc = gql`
    fragment PostParts on Post {
  title
  heroImg
  excerpt
  author {
    ... on Author {
      name
      avatar
    }
    ... on Document {
      id
    }
  }
  date
  _body
}
    `;
export const AuthorPartsFragmentDoc = gql`
    fragment AuthorParts on Author {
  name
  avatar
}
    `;
export const PagePartsFragmentDoc = gql`
    fragment PageParts on Page {
  title
  blocks {
    __typename
    ... on PageBlocksCards {
      style {
        __typename
        padding
        contentWidth
        columns
        typographyTitle
        labelStyles
        headlineStyles
        subheadStyles
        textStyles
      }
      cardStyle {
        __typename
        fillStyles
        padding
        borderStyles
        imageStyles
        typographyTitle
        labelStyles
        headlineStyles
        subheadStyles
        textStyles
        buttonTitle
        buttonType
      }
      background {
        __typename
        fillStyles
        src
        position
        ornaments {
          __typename
          src
          alignment
          width
          height
          xOffset
          yOffset
        }
      }
      label
      headline
      subhead
      body
      items {
        __typename
        image {
          __typename
          src
          alt
        }
        label
        headline
        subhead
        text
        link
        buttonLabel
      }
      navigationLabel
    }
    ... on PageBlocksEmbed {
      style {
        __typename
        fullWidth
        minHeight
        padding
      }
      background {
        __typename
        fillStyles
        src
        position
        ornaments {
          __typename
          src
          alignment
          width
          height
          xOffset
          yOffset
        }
      }
      markup
      navigationLabel
    }
    ... on PageBlocksFeature {
      style {
        __typename
        alignment
        padding
        featureImage
        featureContent
        typographyTitle
        labelStyles
        headlineStyles
        subheadStyles
        textStyles
      }
      background {
        __typename
        fillStyles
        src
        position
        ornaments {
          __typename
          src
          alignment
          width
          height
          xOffset
          yOffset
        }
      }
      image {
        __typename
        src
        alt
      }
      rule
      label
      headline
      subhead
      body
      buttons {
        __typename
        label
        link
        buttonStyle
      }
      navigationLabel
    }
    ... on PageBlocksTailwindFeature {
      tailwind {
        __typename
        section
        wrap
        imageWrap
        image
        contentWrap
        content
        label
        headline
        subhead
        text
        buttons
        button
      }
      image {
        __typename
        src
        alt
      }
      background {
        __typename
        fillStyles
        src
        position
        ornaments {
          __typename
          src
          alignment
          width
          height
          xOffset
          yOffset
        }
      }
      rule
      label
      headline
      subhead
      body
      buttons {
        __typename
        label
        link
      }
      rule2
      navigationLabel
    }
    ... on PageBlocksTailwindCards {
      tailwind {
        __typename
        section
        wrap
        imageWrap
        image
        contentWrap
        content
        label
        headline
        subhead
        text
        buttons
        button
        rule
        cardWrap
        card
        cardImageWrap
        cardImage
        cardContentWrap
        cardContent
        cardLabel
        cardHeadline
        cardSubhead
        cardText
        cardButtons
        cardButton
      }
      image {
        __typename
        src
        alt
      }
      background {
        __typename
        fillStyles
        src
        position
        ornaments {
          __typename
          src
          alignment
          width
          height
          xOffset
          yOffset
        }
      }
      rule
      label
      headline
      subhead
      body
      buttons {
        __typename
        label
        link
        buttonStyle
      }
      items {
        __typename
        image {
          __typename
          src
          alt
        }
        label
        headline
        subhead
        text
        link
        buttonLabel
      }
      rule2
      navigationLabel
    }
  }
}
    `;
export const PageQueryDocument = gql`
    query pageQuery {
  ...LayoutQueryFragment
  postConnection {
    edges {
      node {
        id
        _values
        author {
          ... on Author {
            ...AuthorParts
          }
        }
        _sys {
          filename
        }
      }
    }
  }
}
    ${LayoutQueryFragmentFragmentDoc}
${AuthorPartsFragmentDoc}`;
export const ContentQueryDocument = gql`
    query contentQuery($relativePath: String!) {
  ...LayoutQueryFragment
  page(relativePath: $relativePath) {
    ...PageParts
  }
}
    ${LayoutQueryFragmentFragmentDoc}
${PagePartsFragmentDoc}`;
export const BlogPostQueryDocument = gql`
    query blogPostQuery($relativePath: String!) {
  ...LayoutQueryFragment
  post(relativePath: $relativePath) {
    ...PostParts
    author {
      ... on Author {
        name
        avatar
      }
    }
  }
}
    ${LayoutQueryFragmentFragmentDoc}
${PostPartsFragmentDoc}`;
export const PostDocument = gql`
    query post($relativePath: String!) {
  post(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...PostParts
  }
}
    ${PostPartsFragmentDoc}`;
export const PostConnectionDocument = gql`
    query postConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: PostFilter) {
  postConnection(
    before: $before
    after: $after
    first: $first
    last: $last
    sort: $sort
    filter: $filter
  ) {
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
    totalCount
    edges {
      cursor
      node {
        ... on Document {
          _sys {
            filename
            basename
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...PostParts
      }
    }
  }
}
    ${PostPartsFragmentDoc}`;
export const GlobalDocument = gql`
    query global($relativePath: String!) {
  global(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...GlobalParts
  }
}
    ${GlobalPartsFragmentDoc}`;
export const GlobalConnectionDocument = gql`
    query globalConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: GlobalFilter) {
  globalConnection(
    before: $before
    after: $after
    first: $first
    last: $last
    sort: $sort
    filter: $filter
  ) {
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
    totalCount
    edges {
      cursor
      node {
        ... on Document {
          _sys {
            filename
            basename
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...GlobalParts
      }
    }
  }
}
    ${GlobalPartsFragmentDoc}`;
export const AuthorDocument = gql`
    query author($relativePath: String!) {
  author(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...AuthorParts
  }
}
    ${AuthorPartsFragmentDoc}`;
export const AuthorConnectionDocument = gql`
    query authorConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: AuthorFilter) {
  authorConnection(
    before: $before
    after: $after
    first: $first
    last: $last
    sort: $sort
    filter: $filter
  ) {
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
    totalCount
    edges {
      cursor
      node {
        ... on Document {
          _sys {
            filename
            basename
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...AuthorParts
      }
    }
  }
}
    ${AuthorPartsFragmentDoc}`;
export const PageDocument = gql`
    query page($relativePath: String!) {
  page(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...PageParts
  }
}
    ${PagePartsFragmentDoc}`;
export const PageConnectionDocument = gql`
    query pageConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: PageFilter) {
  pageConnection(
    before: $before
    after: $after
    first: $first
    last: $last
    sort: $sort
    filter: $filter
  ) {
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
    totalCount
    edges {
      cursor
      node {
        ... on Document {
          _sys {
            filename
            basename
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...PageParts
      }
    }
  }
}
    ${PagePartsFragmentDoc}`;
export type Requester<C= {}> = <R, V>(doc: DocumentNode, vars?: V, options?: C) => Promise<R>
  export function getSdk<C>(requester: Requester<C>) {
    return {
      pageQuery(variables?: PageQueryQueryVariables, options?: C): Promise<{data: PageQueryQuery, variables: PageQueryQueryVariables, query: string}> {
        return requester<{data: PageQueryQuery, variables: PageQueryQueryVariables, query: string}, PageQueryQueryVariables>(PageQueryDocument, variables, options);
      },
    contentQuery(variables: ContentQueryQueryVariables, options?: C): Promise<{data: ContentQueryQuery, variables: ContentQueryQueryVariables, query: string}> {
        return requester<{data: ContentQueryQuery, variables: ContentQueryQueryVariables, query: string}, ContentQueryQueryVariables>(ContentQueryDocument, variables, options);
      },
    blogPostQuery(variables: BlogPostQueryQueryVariables, options?: C): Promise<{data: BlogPostQueryQuery, variables: BlogPostQueryQueryVariables, query: string}> {
        return requester<{data: BlogPostQueryQuery, variables: BlogPostQueryQueryVariables, query: string}, BlogPostQueryQueryVariables>(BlogPostQueryDocument, variables, options);
      },
    post(variables: PostQueryVariables, options?: C): Promise<{data: PostQuery, variables: PostQueryVariables, query: string}> {
        return requester<{data: PostQuery, variables: PostQueryVariables, query: string}, PostQueryVariables>(PostDocument, variables, options);
      },
    postConnection(variables?: PostConnectionQueryVariables, options?: C): Promise<{data: PostConnectionQuery, variables: PostConnectionQueryVariables, query: string}> {
        return requester<{data: PostConnectionQuery, variables: PostConnectionQueryVariables, query: string}, PostConnectionQueryVariables>(PostConnectionDocument, variables, options);
      },
    global(variables: GlobalQueryVariables, options?: C): Promise<{data: GlobalQuery, variables: GlobalQueryVariables, query: string}> {
        return requester<{data: GlobalQuery, variables: GlobalQueryVariables, query: string}, GlobalQueryVariables>(GlobalDocument, variables, options);
      },
    globalConnection(variables?: GlobalConnectionQueryVariables, options?: C): Promise<{data: GlobalConnectionQuery, variables: GlobalConnectionQueryVariables, query: string}> {
        return requester<{data: GlobalConnectionQuery, variables: GlobalConnectionQueryVariables, query: string}, GlobalConnectionQueryVariables>(GlobalConnectionDocument, variables, options);
      },
    author(variables: AuthorQueryVariables, options?: C): Promise<{data: AuthorQuery, variables: AuthorQueryVariables, query: string}> {
        return requester<{data: AuthorQuery, variables: AuthorQueryVariables, query: string}, AuthorQueryVariables>(AuthorDocument, variables, options);
      },
    authorConnection(variables?: AuthorConnectionQueryVariables, options?: C): Promise<{data: AuthorConnectionQuery, variables: AuthorConnectionQueryVariables, query: string}> {
        return requester<{data: AuthorConnectionQuery, variables: AuthorConnectionQueryVariables, query: string}, AuthorConnectionQueryVariables>(AuthorConnectionDocument, variables, options);
      },
    page(variables: PageQueryVariables, options?: C): Promise<{data: PageQuery, variables: PageQueryVariables, query: string}> {
        return requester<{data: PageQuery, variables: PageQueryVariables, query: string}, PageQueryVariables>(PageDocument, variables, options);
      },
    pageConnection(variables?: PageConnectionQueryVariables, options?: C): Promise<{data: PageConnectionQuery, variables: PageConnectionQueryVariables, query: string}> {
        return requester<{data: PageConnectionQuery, variables: PageConnectionQueryVariables, query: string}, PageConnectionQueryVariables>(PageConnectionDocument, variables, options);
      }
    };
  }
  export type Sdk = ReturnType<typeof getSdk>;

// TinaSDK generated code
import { createClient, TinaClient } from "tinacms/dist/client";

const generateRequester = (client: TinaClient) => {
  const requester: (
    doc: any,
    vars?: any,
    options?: any,
    client
  ) => Promise<any> = async (doc, vars, _options) => {
    const data = await client.request({
      query: doc,
      variables: vars,
    });

    return { data: data?.data, query: doc, variables: vars || {} };
  };

  return requester;
};

/**
 * @experimental this class can be used but may change in the future
 **/
export const ExperimentalGetTinaClient = () =>
  getSdk(
    generateRequester(createClient({ url: "http://localhost:4001/graphql", queries }))
  );

export const queries = (client: TinaClient) => {
  const requester = generateRequester(client);
  return getSdk(requester);
};

  