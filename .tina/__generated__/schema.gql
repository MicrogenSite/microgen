# DO NOT MODIFY THIS FILE. This file is automatically generated by Tina
"""References another document, used as a foreign key"""
scalar Reference

""""""
scalar JSON

type SystemInfo {
  filename: String!
  basename: String!
  breadcrumbs(excludeExtension: Boolean): [String!]!
  path: String!
  relativePath: String!
  extension: String!
  template: String!
  collection: Collection!
}

type PageInfo {
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
  startCursor: String!
  endCursor: String!
}

""""""
interface Node {
  id: ID!
}

""""""
interface Document {
  sys: SystemInfo
  id: ID!
  form: JSON!
  values: JSON!
}

"""A relay-compliant pagination connection"""
interface Connection {
  totalCount: Float!
}

type Query {
  getCollection(collection: String): Collection!
  getCollections: [Collection!]!
  node(id: String): Node!
  getDocument(collection: String, relativePath: String): DocumentNode!
  getDocumentList(before: String, after: String, first: Float, last: Float): DocumentConnection!
  getDocumentFields: JSON!
  getGlobalDocument(relativePath: String): GlobalDocument!
  getGlobalList(before: String, after: String, first: Float, last: Float): GlobalConnection!
  getPagesDocument(relativePath: String): PagesDocument!
  getPagesList(before: String, after: String, first: Float, last: Float): PagesConnection!
}

type DocumentConnectionEdges {
  cursor: String
  node: DocumentNode
}

type DocumentConnection implements Connection {
  pageInfo: PageInfo
  totalCount: Float!
  edges: [DocumentConnectionEdges]
}

type Collection {
  name: String!
  slug: String!
  label: String
  path: String!
  format: String
  matches: String
  templates: [JSON]
  fields: [JSON]
  documents(before: String, after: String, first: Float, last: Float): DocumentConnection!
}

union DocumentNode = GlobalDocument | PagesDocument

type GlobalColors {
  primary: String
  accent1: String
  accent2: String
  accent3: String
  accent4: String
  white: String
  grayLight: String
  gray: String
  grayDark: String
  black: String
}

type GlobalFonts {
  font1: String
  font2: String
  font3: String
  font4: String
}

type GlobalSizeLeading {
  textXs: String
  textSm: String
  textMd: String
  textLg: String
  textXl: String
  text2xl: String
  text3xl: String
  text4xl: String
  text5xl: String
  text6xl: String
  text7xl: String
  text8xl: String
}

type GlobalButtons {
  primaryRule: String
  primaryFill: String
  primaryBorder: String
  primaryTypography: String
  primaryPadding: String
  primaryRounded: String
  secondaryRule: String
  secondaryFill: String
  secondaryBorder: String
  secondaryTypography: String
  secondaryPadding: String
  secondaryRounded: String
  minorRule: String
  minorFill: String
  minorBorder: String
  minorTypography: String
  minorPadding: String
  minorRounded: String
}

type GlobalLinks {
  color: String
}

type GlobalLogo {
  logoType: String
  logoTypeStyle: String
  image: String
  imageWidth: String
  imageHeight: String
  imageMargin: String
}

type GlobalNavNavItemsSubNavItems {
  label: String
  link: String
}

type GlobalNavNavItems {
  label: String
  link: String
  subNavItems: [GlobalNavNavItemsSubNavItems]
}

type GlobalNav {
  navItems: [GlobalNavNavItems]
  navAlignment: String
  navTypeStyle: String
  navBackgroundColor: String
  padding: String
}

type GlobalBlocksFeatureStyle {
  alignment: String
  padding: String
  featureImage: String
  featureContent: String
  typographyTitle: String
  labelStyles: String
  headlineStyles: String
  subheadStyles: String
  textStyles: String
  contentOrder: String
}

type GlobalBlocksFeatureBackgroundOrnaments {
  src: String
  alignment: String
  width: String
  height: String
  xOffset: String
  yOffset: String
}

type GlobalBlocksFeatureBackground {
  fillStyles: String
  src: String
  position: String
  ornaments: [GlobalBlocksFeatureBackgroundOrnaments]
}

type GlobalBlocksFeatureImage {
  src: String
  alt: String
}

type GlobalBlocksFeatureButtons {
  label: String
  link: String
  type: String
}

type GlobalBlocksFeature {
  style: GlobalBlocksFeatureStyle
  background: GlobalBlocksFeatureBackground
  image: GlobalBlocksFeatureImage
  rule: String
  label: String
  headline: String
  subhead: String
  body: JSON
  buttons: [GlobalBlocksFeatureButtons]
  rule2: String
  navigationLabel: String
}

type GlobalBlocksPhotoCardsStyle {
  textAlignment: String
  minHeight: String
  padding: String
  contentWidth: String
  columns: String
  typographyTitle: String
  labelStyles: String
  headlineStyles: String
  subheadStyles: String
  textStyles: String
  contentOrder: String
}

type GlobalBlocksPhotoCardsCardStyle {
  fillStyles: String
  padding: String
  borderStyles: String
  imageStyles: String
  typographyTitle: String
  labelStyles: String
  headlineStyles: String
  subheadStyles: String
  textStyles: String
  buttonTitle: String
  buttonType: String
}

type GlobalBlocksPhotoCardsBackgroundOrnaments {
  src: String
  alignment: String
  width: String
  height: String
  xOffset: String
  yOffset: String
}

type GlobalBlocksPhotoCardsBackground {
  fillStyles: String
  src: String
  position: String
  ornaments: [GlobalBlocksPhotoCardsBackgroundOrnaments]
}

type GlobalBlocksPhotoCardsButtons {
  label: String
  link: String
  type: String
}

type GlobalBlocksPhotoCardsItemsImage {
  src: String
  alt: String
}

type GlobalBlocksPhotoCardsItems {
  image: GlobalBlocksPhotoCardsItemsImage
  label: String
  headline: String
  subhead: String
  text: JSON
  link: String
  buttonLabel: String
}

type GlobalBlocksPhotoCards {
  style: GlobalBlocksPhotoCardsStyle
  cardStyle: GlobalBlocksPhotoCardsCardStyle
  background: GlobalBlocksPhotoCardsBackground
  label: String
  headline: String
  subhead: String
  body: JSON
  buttons: [GlobalBlocksPhotoCardsButtons]
  items: [GlobalBlocksPhotoCardsItems]
  navigationLabel: String
}

type GlobalBlocksTextCardsStyle {
  textAlignment: String
  minHeight: String
  padding: String
  contentWidth: String
  columns: String
  typographyTitle: String
  labelStyles: String
  headlineStyles: String
  subheadStyles: String
  textStyles: String
  contentOrder: String
}

type GlobalBlocksTextCardsCardStyle {
  fillStyles: String
  padding: String
  borderStyles: String
  typographyTitle: String
  labelStyles: String
  headlineStyles: String
  subheadStyles: String
  textStyles: String
  buttonTitle: String
  buttonType: String
}

type GlobalBlocksTextCardsBackgroundOrnaments {
  src: String
  alignment: String
  width: String
  height: String
  xOffset: String
  yOffset: String
}

type GlobalBlocksTextCardsBackground {
  fillStyles: String
  src: String
  position: String
  ornaments: [GlobalBlocksTextCardsBackgroundOrnaments]
}

type GlobalBlocksTextCardsButtons {
  label: String
  link: String
  type: String
}

type GlobalBlocksTextCardsItems {
  headline: String
  subhead: String
  text: JSON
  link: String
  buttonLabel: String
}

type GlobalBlocksTextCards {
  style: GlobalBlocksTextCardsStyle
  cardStyle: GlobalBlocksTextCardsCardStyle
  background: GlobalBlocksTextCardsBackground
  label: String
  headline: String
  subhead: String
  body: JSON
  buttons: [GlobalBlocksTextCardsButtons]
  items: [GlobalBlocksTextCardsItems]
  navigationLabel: String
}

type GlobalBlocksBannerStyle {
  textAlignment: String
  minHeight: String
  padding: String
  width: String
  typographyTitle: String
  labelStyles: String
  headlineStyles: String
  subheadStyles: String
  textStyles: String
  contentOrder: String
}

type GlobalBlocksBannerBackgroundOrnaments {
  src: String
  alignment: String
  width: String
  height: String
  xOffset: String
  yOffset: String
}

type GlobalBlocksBannerBackground {
  fillStyles: String
  src: String
  position: String
  ornaments: [GlobalBlocksBannerBackgroundOrnaments]
}

type GlobalBlocksBannerImage {
  src: String
  alt: String
}

type GlobalBlocksBannerButtons {
  label: String
  link: String
  type: String
}

type GlobalBlocksBanner {
  style: GlobalBlocksBannerStyle
  background: GlobalBlocksBannerBackground
  image: GlobalBlocksBannerImage
  label: String
  headline: String
  subhead: String
  body: JSON
  buttons: [GlobalBlocksBannerButtons]
  navigationLabel: String
}

type GlobalBlocksEmbedStyle {
  minHeight: String
  fullWidth: Boolean
  padding: String
}

type GlobalBlocksEmbedBackgroundOrnaments {
  src: String
  alignment: String
  width: String
  height: String
  xOffset: String
  yOffset: String
}

type GlobalBlocksEmbedBackground {
  fillStyles: String
  src: String
  position: String
  ornaments: [GlobalBlocksEmbedBackgroundOrnaments]
}

type GlobalBlocksEmbed {
  style: GlobalBlocksEmbedStyle
  background: GlobalBlocksEmbedBackground
  markup: String
  navigationLabel: String
}

type GlobalBlocksTailwindFeatureTailwind {
  section: String
  wrap: String
  imageWrap: String
  image: String
  contentWrap: String
  content: String
  label: String
  headline: String
  subhead: String
  text: String
  buttons: String
  button: String
}

type GlobalBlocksTailwindFeatureImage {
  src: String
  alt: String
}

type GlobalBlocksTailwindFeatureBackgroundOrnaments {
  src: String
  alignment: String
  width: String
  height: String
  xOffset: String
  yOffset: String
}

type GlobalBlocksTailwindFeatureBackground {
  fillStyles: String
  src: String
  position: String
  ornaments: [GlobalBlocksTailwindFeatureBackgroundOrnaments]
}

type GlobalBlocksTailwindFeatureButtons {
  label: String
  link: String
}

type GlobalBlocksTailwindFeature {
  tailwind: GlobalBlocksTailwindFeatureTailwind
  image: GlobalBlocksTailwindFeatureImage
  background: GlobalBlocksTailwindFeatureBackground
  rule: String
  label: String
  headline: String
  subhead: String
  body: JSON
  buttons: [GlobalBlocksTailwindFeatureButtons]
  rule2: String
  navigationLabel: String
}

type GlobalBlocksTailwindCardsTailwind {
  section: String
  wrap: String
  imageWrap: String
  image: String
  contentWrap: String
  content: String
  label: String
  headline: String
  subhead: String
  text: String
  buttons: String
  button: String
  rule: String
  cardWrap: String
  card: String
  cardImageWrap: String
  cardImage: String
  cardContentWrap: String
  cardContent: String
  cardLabel: String
  cardHeadline: String
  cardSubhead: String
  cardText: String
  cardButtons: String
  cardButton: String
}

type GlobalBlocksTailwindCardsImage {
  src: String
  alt: String
}

type GlobalBlocksTailwindCardsBackgroundOrnaments {
  src: String
  alignment: String
  width: String
  height: String
  xOffset: String
  yOffset: String
}

type GlobalBlocksTailwindCardsBackground {
  fillStyles: String
  src: String
  position: String
  ornaments: [GlobalBlocksTailwindCardsBackgroundOrnaments]
}

type GlobalBlocksTailwindCardsButtons {
  label: String
  link: String
  type: String
}

type GlobalBlocksTailwindCardsItemsImage {
  src: String
  alt: String
}

type GlobalBlocksTailwindCardsItems {
  image: GlobalBlocksTailwindCardsItemsImage
  label: String
  headline: String
  subhead: String
  text: JSON
  link: String
  buttonLabel: String
}

type GlobalBlocksTailwindCards {
  tailwind: GlobalBlocksTailwindCardsTailwind
  image: GlobalBlocksTailwindCardsImage
  background: GlobalBlocksTailwindCardsBackground
  rule: String
  label: String
  headline: String
  subhead: String
  body: JSON
  buttons: [GlobalBlocksTailwindCardsButtons]
  items: [GlobalBlocksTailwindCardsItems]
  rule2: String
  navigationLabel: String
}

union GlobalBlocks = GlobalBlocksFeature | GlobalBlocksPhotoCards | GlobalBlocksTextCards | GlobalBlocksBanner | GlobalBlocksEmbed | GlobalBlocksTailwindFeature | GlobalBlocksTailwindCards

type GlobalFooterNavFooterNavItems {
  label: String
  link: String
}

type GlobalFooterNav {
  footerNavItems: [GlobalFooterNavFooterNavItems]
}

type GlobalRedirects {
  from: String
  to: String
}

type Global {
  siteUrl: String
  gtmId: String
  favicon: String
  desktopWidth: String
  backgroundColor: String
  rule: String
  colors: GlobalColors
  fonts: GlobalFonts
  sizeLeading: GlobalSizeLeading
  buttons: GlobalButtons
  links: GlobalLinks
  logo: GlobalLogo
  nav: GlobalNav
  rule2: String
  blocks: [GlobalBlocks]
  footerNav: GlobalFooterNav
  redirects: [GlobalRedirects]
}

type GlobalDocument implements Node & Document {
  id: ID!
  sys: SystemInfo!
  data: Global!
  form: JSON!
  values: JSON!
  dataJSON: JSON!
}

type GlobalConnectionEdges {
  cursor: String
  node: GlobalDocument
}

type GlobalConnection implements Connection {
  pageInfo: PageInfo
  totalCount: Float!
  edges: [GlobalConnectionEdges]
}

type PagesBlocksFeatureStyle {
  alignment: String
  padding: String
  featureImage: String
  featureContent: String
  typographyTitle: String
  labelStyles: String
  headlineStyles: String
  subheadStyles: String
  textStyles: String
  contentOrder: String
}

type PagesBlocksFeatureBackgroundOrnaments {
  src: String
  alignment: String
  width: String
  height: String
  xOffset: String
  yOffset: String
}

type PagesBlocksFeatureBackground {
  fillStyles: String
  src: String
  position: String
  ornaments: [PagesBlocksFeatureBackgroundOrnaments]
}

type PagesBlocksFeatureImage {
  src: String
  alt: String
}

type PagesBlocksFeatureButtons {
  label: String
  link: String
  type: String
}

type PagesBlocksFeature {
  style: PagesBlocksFeatureStyle
  background: PagesBlocksFeatureBackground
  image: PagesBlocksFeatureImage
  rule: String
  label: String
  headline: String
  subhead: String
  body: JSON
  buttons: [PagesBlocksFeatureButtons]
  rule2: String
  navigationLabel: String
}

type PagesBlocksPhotoCardsStyle {
  textAlignment: String
  minHeight: String
  padding: String
  contentWidth: String
  columns: String
  typographyTitle: String
  labelStyles: String
  headlineStyles: String
  subheadStyles: String
  textStyles: String
  contentOrder: String
}

type PagesBlocksPhotoCardsCardStyle {
  fillStyles: String
  padding: String
  borderStyles: String
  imageStyles: String
  typographyTitle: String
  labelStyles: String
  headlineStyles: String
  subheadStyles: String
  textStyles: String
  buttonTitle: String
  buttonType: String
}

type PagesBlocksPhotoCardsBackgroundOrnaments {
  src: String
  alignment: String
  width: String
  height: String
  xOffset: String
  yOffset: String
}

type PagesBlocksPhotoCardsBackground {
  fillStyles: String
  src: String
  position: String
  ornaments: [PagesBlocksPhotoCardsBackgroundOrnaments]
}

type PagesBlocksPhotoCardsButtons {
  label: String
  link: String
  type: String
}

type PagesBlocksPhotoCardsItemsImage {
  src: String
  alt: String
}

type PagesBlocksPhotoCardsItems {
  image: PagesBlocksPhotoCardsItemsImage
  label: String
  headline: String
  subhead: String
  text: JSON
  link: String
  buttonLabel: String
}

type PagesBlocksPhotoCards {
  style: PagesBlocksPhotoCardsStyle
  cardStyle: PagesBlocksPhotoCardsCardStyle
  background: PagesBlocksPhotoCardsBackground
  label: String
  headline: String
  subhead: String
  body: JSON
  buttons: [PagesBlocksPhotoCardsButtons]
  items: [PagesBlocksPhotoCardsItems]
  navigationLabel: String
}

type PagesBlocksTextCardsStyle {
  textAlignment: String
  minHeight: String
  padding: String
  contentWidth: String
  columns: String
  typographyTitle: String
  labelStyles: String
  headlineStyles: String
  subheadStyles: String
  textStyles: String
  contentOrder: String
}

type PagesBlocksTextCardsCardStyle {
  fillStyles: String
  padding: String
  borderStyles: String
  typographyTitle: String
  labelStyles: String
  headlineStyles: String
  subheadStyles: String
  textStyles: String
  buttonTitle: String
  buttonType: String
}

type PagesBlocksTextCardsBackgroundOrnaments {
  src: String
  alignment: String
  width: String
  height: String
  xOffset: String
  yOffset: String
}

type PagesBlocksTextCardsBackground {
  fillStyles: String
  src: String
  position: String
  ornaments: [PagesBlocksTextCardsBackgroundOrnaments]
}

type PagesBlocksTextCardsButtons {
  label: String
  link: String
  type: String
}

type PagesBlocksTextCardsItems {
  headline: String
  subhead: String
  text: JSON
  link: String
  buttonLabel: String
}

type PagesBlocksTextCards {
  style: PagesBlocksTextCardsStyle
  cardStyle: PagesBlocksTextCardsCardStyle
  background: PagesBlocksTextCardsBackground
  label: String
  headline: String
  subhead: String
  body: JSON
  buttons: [PagesBlocksTextCardsButtons]
  items: [PagesBlocksTextCardsItems]
  navigationLabel: String
}

type PagesBlocksBannerStyle {
  textAlignment: String
  minHeight: String
  padding: String
  width: String
  typographyTitle: String
  labelStyles: String
  headlineStyles: String
  subheadStyles: String
  textStyles: String
  contentOrder: String
}

type PagesBlocksBannerBackgroundOrnaments {
  src: String
  alignment: String
  width: String
  height: String
  xOffset: String
  yOffset: String
}

type PagesBlocksBannerBackground {
  fillStyles: String
  src: String
  position: String
  ornaments: [PagesBlocksBannerBackgroundOrnaments]
}

type PagesBlocksBannerImage {
  src: String
  alt: String
}

type PagesBlocksBannerButtons {
  label: String
  link: String
  type: String
}

type PagesBlocksBanner {
  style: PagesBlocksBannerStyle
  background: PagesBlocksBannerBackground
  image: PagesBlocksBannerImage
  label: String
  headline: String
  subhead: String
  body: JSON
  buttons: [PagesBlocksBannerButtons]
  navigationLabel: String
}

type PagesBlocksEmbedStyle {
  minHeight: String
  fullWidth: Boolean
  padding: String
}

type PagesBlocksEmbedBackgroundOrnaments {
  src: String
  alignment: String
  width: String
  height: String
  xOffset: String
  yOffset: String
}

type PagesBlocksEmbedBackground {
  fillStyles: String
  src: String
  position: String
  ornaments: [PagesBlocksEmbedBackgroundOrnaments]
}

type PagesBlocksEmbed {
  style: PagesBlocksEmbedStyle
  background: PagesBlocksEmbedBackground
  markup: String
  navigationLabel: String
}

type PagesBlocksTailwindFeatureTailwind {
  section: String
  wrap: String
  imageWrap: String
  image: String
  contentWrap: String
  content: String
  label: String
  headline: String
  subhead: String
  text: String
  buttons: String
  button: String
}

type PagesBlocksTailwindFeatureImage {
  src: String
  alt: String
}

type PagesBlocksTailwindFeatureBackgroundOrnaments {
  src: String
  alignment: String
  width: String
  height: String
  xOffset: String
  yOffset: String
}

type PagesBlocksTailwindFeatureBackground {
  fillStyles: String
  src: String
  position: String
  ornaments: [PagesBlocksTailwindFeatureBackgroundOrnaments]
}

type PagesBlocksTailwindFeatureButtons {
  label: String
  link: String
}

type PagesBlocksTailwindFeature {
  tailwind: PagesBlocksTailwindFeatureTailwind
  image: PagesBlocksTailwindFeatureImage
  background: PagesBlocksTailwindFeatureBackground
  rule: String
  label: String
  headline: String
  subhead: String
  body: JSON
  buttons: [PagesBlocksTailwindFeatureButtons]
  rule2: String
  navigationLabel: String
}

type PagesBlocksTailwindCardsTailwind {
  section: String
  wrap: String
  imageWrap: String
  image: String
  contentWrap: String
  content: String
  label: String
  headline: String
  subhead: String
  text: String
  buttons: String
  button: String
  rule: String
  cardWrap: String
  card: String
  cardImageWrap: String
  cardImage: String
  cardContentWrap: String
  cardContent: String
  cardLabel: String
  cardHeadline: String
  cardSubhead: String
  cardText: String
  cardButtons: String
  cardButton: String
}

type PagesBlocksTailwindCardsImage {
  src: String
  alt: String
}

type PagesBlocksTailwindCardsBackgroundOrnaments {
  src: String
  alignment: String
  width: String
  height: String
  xOffset: String
  yOffset: String
}

type PagesBlocksTailwindCardsBackground {
  fillStyles: String
  src: String
  position: String
  ornaments: [PagesBlocksTailwindCardsBackgroundOrnaments]
}

type PagesBlocksTailwindCardsButtons {
  label: String
  link: String
  type: String
}

type PagesBlocksTailwindCardsItemsImage {
  src: String
  alt: String
}

type PagesBlocksTailwindCardsItems {
  image: PagesBlocksTailwindCardsItemsImage
  label: String
  headline: String
  subhead: String
  text: JSON
  link: String
  buttonLabel: String
}

type PagesBlocksTailwindCards {
  tailwind: PagesBlocksTailwindCardsTailwind
  image: PagesBlocksTailwindCardsImage
  background: PagesBlocksTailwindCardsBackground
  rule: String
  label: String
  headline: String
  subhead: String
  body: JSON
  buttons: [PagesBlocksTailwindCardsButtons]
  items: [PagesBlocksTailwindCardsItems]
  rule2: String
  navigationLabel: String
}

union PagesBlocks = PagesBlocksFeature | PagesBlocksPhotoCards | PagesBlocksTextCards | PagesBlocksBanner | PagesBlocksEmbed | PagesBlocksTailwindFeature | PagesBlocksTailwindCards

type PagesMeta {
  pageTitle: String
  pageDescription: String
  siteImageSrc: String
}

type Pages {
  blocks: [PagesBlocks]
  meta: PagesMeta
}

type PagesDocument implements Node & Document {
  id: ID!
  sys: SystemInfo!
  data: Pages!
  form: JSON!
  values: JSON!
  dataJSON: JSON!
}

type PagesConnectionEdges {
  cursor: String
  node: PagesDocument
}

type PagesConnection implements Connection {
  pageInfo: PageInfo
  totalCount: Float!
  edges: [PagesConnectionEdges]
}

type Mutation {
  addPendingDocument(collection: String!, relativePath: String!, template: String): DocumentNode!
  updateDocument(collection: String, relativePath: String!, params: DocumentMutation!): DocumentNode!
  createDocument(collection: String, relativePath: String!, params: DocumentMutation!): DocumentNode!
  updateGlobalDocument(relativePath: String!, params: GlobalMutation!): GlobalDocument!
  createGlobalDocument(relativePath: String!, params: GlobalMutation!): GlobalDocument!
  updatePagesDocument(relativePath: String!, params: PagesMutation!): PagesDocument!
  createPagesDocument(relativePath: String!, params: PagesMutation!): PagesDocument!
}

input DocumentMutation {
  global: GlobalMutation
  pages: PagesMutation
}

input GlobalColorsMutation {
  primary: String
  accent1: String
  accent2: String
  accent3: String
  accent4: String
  white: String
  grayLight: String
  gray: String
  grayDark: String
  black: String
}

input GlobalFontsMutation {
  font1: String
  font2: String
  font3: String
  font4: String
}

input GlobalSizeLeadingMutation {
  textXs: String
  textSm: String
  textMd: String
  textLg: String
  textXl: String
  text2xl: String
  text3xl: String
  text4xl: String
  text5xl: String
  text6xl: String
  text7xl: String
  text8xl: String
}

input GlobalButtonsMutation {
  primaryRule: String
  primaryFill: String
  primaryBorder: String
  primaryTypography: String
  primaryPadding: String
  primaryRounded: String
  secondaryRule: String
  secondaryFill: String
  secondaryBorder: String
  secondaryTypography: String
  secondaryPadding: String
  secondaryRounded: String
  minorRule: String
  minorFill: String
  minorBorder: String
  minorTypography: String
  minorPadding: String
  minorRounded: String
}

input GlobalLinksMutation {
  color: String
}

input GlobalLogoMutation {
  logoType: String
  logoTypeStyle: String
  image: String
  imageWidth: String
  imageHeight: String
  imageMargin: String
}

input GlobalNavNavItemsSubNavItemsMutation {
  label: String
  link: String
}

input GlobalNavNavItemsMutation {
  label: String
  link: String
  subNavItems: [GlobalNavNavItemsSubNavItemsMutation]
}

input GlobalNavMutation {
  navItems: [GlobalNavNavItemsMutation]
  navAlignment: String
  navTypeStyle: String
  navBackgroundColor: String
  padding: String
}

input GlobalBlocksFeatureStyleMutation {
  alignment: String
  padding: String
  featureImage: String
  featureContent: String
  typographyTitle: String
  labelStyles: String
  headlineStyles: String
  subheadStyles: String
  textStyles: String
  contentOrder: String
}

input GlobalBlocksFeatureBackgroundOrnamentsMutation {
  src: String
  alignment: String
  width: String
  height: String
  xOffset: String
  yOffset: String
}

input GlobalBlocksFeatureBackgroundMutation {
  fillStyles: String
  src: String
  position: String
  ornaments: [GlobalBlocksFeatureBackgroundOrnamentsMutation]
}

input GlobalBlocksFeatureImageMutation {
  src: String
  alt: String
}

input GlobalBlocksFeatureButtonsMutation {
  label: String
  link: String
  type: String
}

input GlobalBlocksFeatureMutation {
  style: GlobalBlocksFeatureStyleMutation
  background: GlobalBlocksFeatureBackgroundMutation
  image: GlobalBlocksFeatureImageMutation
  rule: String
  label: String
  headline: String
  subhead: String
  body: JSON
  buttons: [GlobalBlocksFeatureButtonsMutation]
  rule2: String
  navigationLabel: String
}

input GlobalBlocksPhotoCardsStyleMutation {
  textAlignment: String
  minHeight: String
  padding: String
  contentWidth: String
  columns: String
  typographyTitle: String
  labelStyles: String
  headlineStyles: String
  subheadStyles: String
  textStyles: String
  contentOrder: String
}

input GlobalBlocksPhotoCardsCardStyleMutation {
  fillStyles: String
  padding: String
  borderStyles: String
  imageStyles: String
  typographyTitle: String
  labelStyles: String
  headlineStyles: String
  subheadStyles: String
  textStyles: String
  buttonTitle: String
  buttonType: String
}

input GlobalBlocksPhotoCardsBackgroundOrnamentsMutation {
  src: String
  alignment: String
  width: String
  height: String
  xOffset: String
  yOffset: String
}

input GlobalBlocksPhotoCardsBackgroundMutation {
  fillStyles: String
  src: String
  position: String
  ornaments: [GlobalBlocksPhotoCardsBackgroundOrnamentsMutation]
}

input GlobalBlocksPhotoCardsButtonsMutation {
  label: String
  link: String
  type: String
}

input GlobalBlocksPhotoCardsItemsImageMutation {
  src: String
  alt: String
}

input GlobalBlocksPhotoCardsItemsMutation {
  image: GlobalBlocksPhotoCardsItemsImageMutation
  label: String
  headline: String
  subhead: String
  text: JSON
  link: String
  buttonLabel: String
}

input GlobalBlocksPhotoCardsMutation {
  style: GlobalBlocksPhotoCardsStyleMutation
  cardStyle: GlobalBlocksPhotoCardsCardStyleMutation
  background: GlobalBlocksPhotoCardsBackgroundMutation
  label: String
  headline: String
  subhead: String
  body: JSON
  buttons: [GlobalBlocksPhotoCardsButtonsMutation]
  items: [GlobalBlocksPhotoCardsItemsMutation]
  navigationLabel: String
}

input GlobalBlocksTextCardsStyleMutation {
  textAlignment: String
  minHeight: String
  padding: String
  contentWidth: String
  columns: String
  typographyTitle: String
  labelStyles: String
  headlineStyles: String
  subheadStyles: String
  textStyles: String
  contentOrder: String
}

input GlobalBlocksTextCardsCardStyleMutation {
  fillStyles: String
  padding: String
  borderStyles: String
  typographyTitle: String
  labelStyles: String
  headlineStyles: String
  subheadStyles: String
  textStyles: String
  buttonTitle: String
  buttonType: String
}

input GlobalBlocksTextCardsBackgroundOrnamentsMutation {
  src: String
  alignment: String
  width: String
  height: String
  xOffset: String
  yOffset: String
}

input GlobalBlocksTextCardsBackgroundMutation {
  fillStyles: String
  src: String
  position: String
  ornaments: [GlobalBlocksTextCardsBackgroundOrnamentsMutation]
}

input GlobalBlocksTextCardsButtonsMutation {
  label: String
  link: String
  type: String
}

input GlobalBlocksTextCardsItemsMutation {
  headline: String
  subhead: String
  text: JSON
  link: String
  buttonLabel: String
}

input GlobalBlocksTextCardsMutation {
  style: GlobalBlocksTextCardsStyleMutation
  cardStyle: GlobalBlocksTextCardsCardStyleMutation
  background: GlobalBlocksTextCardsBackgroundMutation
  label: String
  headline: String
  subhead: String
  body: JSON
  buttons: [GlobalBlocksTextCardsButtonsMutation]
  items: [GlobalBlocksTextCardsItemsMutation]
  navigationLabel: String
}

input GlobalBlocksBannerStyleMutation {
  textAlignment: String
  minHeight: String
  padding: String
  width: String
  typographyTitle: String
  labelStyles: String
  headlineStyles: String
  subheadStyles: String
  textStyles: String
  contentOrder: String
}

input GlobalBlocksBannerBackgroundOrnamentsMutation {
  src: String
  alignment: String
  width: String
  height: String
  xOffset: String
  yOffset: String
}

input GlobalBlocksBannerBackgroundMutation {
  fillStyles: String
  src: String
  position: String
  ornaments: [GlobalBlocksBannerBackgroundOrnamentsMutation]
}

input GlobalBlocksBannerImageMutation {
  src: String
  alt: String
}

input GlobalBlocksBannerButtonsMutation {
  label: String
  link: String
  type: String
}

input GlobalBlocksBannerMutation {
  style: GlobalBlocksBannerStyleMutation
  background: GlobalBlocksBannerBackgroundMutation
  image: GlobalBlocksBannerImageMutation
  label: String
  headline: String
  subhead: String
  body: JSON
  buttons: [GlobalBlocksBannerButtonsMutation]
  navigationLabel: String
}

input GlobalBlocksEmbedStyleMutation {
  minHeight: String
  fullWidth: Boolean
  padding: String
}

input GlobalBlocksEmbedBackgroundOrnamentsMutation {
  src: String
  alignment: String
  width: String
  height: String
  xOffset: String
  yOffset: String
}

input GlobalBlocksEmbedBackgroundMutation {
  fillStyles: String
  src: String
  position: String
  ornaments: [GlobalBlocksEmbedBackgroundOrnamentsMutation]
}

input GlobalBlocksEmbedMutation {
  style: GlobalBlocksEmbedStyleMutation
  background: GlobalBlocksEmbedBackgroundMutation
  markup: String
  navigationLabel: String
}

input GlobalBlocksTailwindFeatureTailwindMutation {
  section: String
  wrap: String
  imageWrap: String
  image: String
  contentWrap: String
  content: String
  label: String
  headline: String
  subhead: String
  text: String
  buttons: String
  button: String
}

input GlobalBlocksTailwindFeatureImageMutation {
  src: String
  alt: String
}

input GlobalBlocksTailwindFeatureBackgroundOrnamentsMutation {
  src: String
  alignment: String
  width: String
  height: String
  xOffset: String
  yOffset: String
}

input GlobalBlocksTailwindFeatureBackgroundMutation {
  fillStyles: String
  src: String
  position: String
  ornaments: [GlobalBlocksTailwindFeatureBackgroundOrnamentsMutation]
}

input GlobalBlocksTailwindFeatureButtonsMutation {
  label: String
  link: String
}

input GlobalBlocksTailwindFeatureMutation {
  tailwind: GlobalBlocksTailwindFeatureTailwindMutation
  image: GlobalBlocksTailwindFeatureImageMutation
  background: GlobalBlocksTailwindFeatureBackgroundMutation
  rule: String
  label: String
  headline: String
  subhead: String
  body: JSON
  buttons: [GlobalBlocksTailwindFeatureButtonsMutation]
  rule2: String
  navigationLabel: String
}

input GlobalBlocksTailwindCardsTailwindMutation {
  section: String
  wrap: String
  imageWrap: String
  image: String
  contentWrap: String
  content: String
  label: String
  headline: String
  subhead: String
  text: String
  buttons: String
  button: String
  rule: String
  cardWrap: String
  card: String
  cardImageWrap: String
  cardImage: String
  cardContentWrap: String
  cardContent: String
  cardLabel: String
  cardHeadline: String
  cardSubhead: String
  cardText: String
  cardButtons: String
  cardButton: String
}

input GlobalBlocksTailwindCardsImageMutation {
  src: String
  alt: String
}

input GlobalBlocksTailwindCardsBackgroundOrnamentsMutation {
  src: String
  alignment: String
  width: String
  height: String
  xOffset: String
  yOffset: String
}

input GlobalBlocksTailwindCardsBackgroundMutation {
  fillStyles: String
  src: String
  position: String
  ornaments: [GlobalBlocksTailwindCardsBackgroundOrnamentsMutation]
}

input GlobalBlocksTailwindCardsButtonsMutation {
  label: String
  link: String
  type: String
}

input GlobalBlocksTailwindCardsItemsImageMutation {
  src: String
  alt: String
}

input GlobalBlocksTailwindCardsItemsMutation {
  image: GlobalBlocksTailwindCardsItemsImageMutation
  label: String
  headline: String
  subhead: String
  text: JSON
  link: String
  buttonLabel: String
}

input GlobalBlocksTailwindCardsMutation {
  tailwind: GlobalBlocksTailwindCardsTailwindMutation
  image: GlobalBlocksTailwindCardsImageMutation
  background: GlobalBlocksTailwindCardsBackgroundMutation
  rule: String
  label: String
  headline: String
  subhead: String
  body: JSON
  buttons: [GlobalBlocksTailwindCardsButtonsMutation]
  items: [GlobalBlocksTailwindCardsItemsMutation]
  rule2: String
  navigationLabel: String
}

input GlobalBlocksMutation {
  feature: GlobalBlocksFeatureMutation
  photoCards: GlobalBlocksPhotoCardsMutation
  textCards: GlobalBlocksTextCardsMutation
  banner: GlobalBlocksBannerMutation
  embed: GlobalBlocksEmbedMutation
  tailwindFeature: GlobalBlocksTailwindFeatureMutation
  tailwindCards: GlobalBlocksTailwindCardsMutation
}

input GlobalFooterNavFooterNavItemsMutation {
  label: String
  link: String
}

input GlobalFooterNavMutation {
  footerNavItems: [GlobalFooterNavFooterNavItemsMutation]
}

input GlobalRedirectsMutation {
  from: String
  to: String
}

input GlobalMutation {
  siteUrl: String
  gtmId: String
  favicon: String
  desktopWidth: String
  backgroundColor: String
  rule: String
  colors: GlobalColorsMutation
  fonts: GlobalFontsMutation
  sizeLeading: GlobalSizeLeadingMutation
  buttons: GlobalButtonsMutation
  links: GlobalLinksMutation
  logo: GlobalLogoMutation
  nav: GlobalNavMutation
  rule2: String
  blocks: [GlobalBlocksMutation]
  footerNav: GlobalFooterNavMutation
  redirects: [GlobalRedirectsMutation]
}

input PagesBlocksFeatureStyleMutation {
  alignment: String
  padding: String
  featureImage: String
  featureContent: String
  typographyTitle: String
  labelStyles: String
  headlineStyles: String
  subheadStyles: String
  textStyles: String
  contentOrder: String
}

input PagesBlocksFeatureBackgroundOrnamentsMutation {
  src: String
  alignment: String
  width: String
  height: String
  xOffset: String
  yOffset: String
}

input PagesBlocksFeatureBackgroundMutation {
  fillStyles: String
  src: String
  position: String
  ornaments: [PagesBlocksFeatureBackgroundOrnamentsMutation]
}

input PagesBlocksFeatureImageMutation {
  src: String
  alt: String
}

input PagesBlocksFeatureButtonsMutation {
  label: String
  link: String
  type: String
}

input PagesBlocksFeatureMutation {
  style: PagesBlocksFeatureStyleMutation
  background: PagesBlocksFeatureBackgroundMutation
  image: PagesBlocksFeatureImageMutation
  rule: String
  label: String
  headline: String
  subhead: String
  body: JSON
  buttons: [PagesBlocksFeatureButtonsMutation]
  rule2: String
  navigationLabel: String
}

input PagesBlocksPhotoCardsStyleMutation {
  textAlignment: String
  minHeight: String
  padding: String
  contentWidth: String
  columns: String
  typographyTitle: String
  labelStyles: String
  headlineStyles: String
  subheadStyles: String
  textStyles: String
  contentOrder: String
}

input PagesBlocksPhotoCardsCardStyleMutation {
  fillStyles: String
  padding: String
  borderStyles: String
  imageStyles: String
  typographyTitle: String
  labelStyles: String
  headlineStyles: String
  subheadStyles: String
  textStyles: String
  buttonTitle: String
  buttonType: String
}

input PagesBlocksPhotoCardsBackgroundOrnamentsMutation {
  src: String
  alignment: String
  width: String
  height: String
  xOffset: String
  yOffset: String
}

input PagesBlocksPhotoCardsBackgroundMutation {
  fillStyles: String
  src: String
  position: String
  ornaments: [PagesBlocksPhotoCardsBackgroundOrnamentsMutation]
}

input PagesBlocksPhotoCardsButtonsMutation {
  label: String
  link: String
  type: String
}

input PagesBlocksPhotoCardsItemsImageMutation {
  src: String
  alt: String
}

input PagesBlocksPhotoCardsItemsMutation {
  image: PagesBlocksPhotoCardsItemsImageMutation
  label: String
  headline: String
  subhead: String
  text: JSON
  link: String
  buttonLabel: String
}

input PagesBlocksPhotoCardsMutation {
  style: PagesBlocksPhotoCardsStyleMutation
  cardStyle: PagesBlocksPhotoCardsCardStyleMutation
  background: PagesBlocksPhotoCardsBackgroundMutation
  label: String
  headline: String
  subhead: String
  body: JSON
  buttons: [PagesBlocksPhotoCardsButtonsMutation]
  items: [PagesBlocksPhotoCardsItemsMutation]
  navigationLabel: String
}

input PagesBlocksTextCardsStyleMutation {
  textAlignment: String
  minHeight: String
  padding: String
  contentWidth: String
  columns: String
  typographyTitle: String
  labelStyles: String
  headlineStyles: String
  subheadStyles: String
  textStyles: String
  contentOrder: String
}

input PagesBlocksTextCardsCardStyleMutation {
  fillStyles: String
  padding: String
  borderStyles: String
  typographyTitle: String
  labelStyles: String
  headlineStyles: String
  subheadStyles: String
  textStyles: String
  buttonTitle: String
  buttonType: String
}

input PagesBlocksTextCardsBackgroundOrnamentsMutation {
  src: String
  alignment: String
  width: String
  height: String
  xOffset: String
  yOffset: String
}

input PagesBlocksTextCardsBackgroundMutation {
  fillStyles: String
  src: String
  position: String
  ornaments: [PagesBlocksTextCardsBackgroundOrnamentsMutation]
}

input PagesBlocksTextCardsButtonsMutation {
  label: String
  link: String
  type: String
}

input PagesBlocksTextCardsItemsMutation {
  headline: String
  subhead: String
  text: JSON
  link: String
  buttonLabel: String
}

input PagesBlocksTextCardsMutation {
  style: PagesBlocksTextCardsStyleMutation
  cardStyle: PagesBlocksTextCardsCardStyleMutation
  background: PagesBlocksTextCardsBackgroundMutation
  label: String
  headline: String
  subhead: String
  body: JSON
  buttons: [PagesBlocksTextCardsButtonsMutation]
  items: [PagesBlocksTextCardsItemsMutation]
  navigationLabel: String
}

input PagesBlocksBannerStyleMutation {
  textAlignment: String
  minHeight: String
  padding: String
  width: String
  typographyTitle: String
  labelStyles: String
  headlineStyles: String
  subheadStyles: String
  textStyles: String
  contentOrder: String
}

input PagesBlocksBannerBackgroundOrnamentsMutation {
  src: String
  alignment: String
  width: String
  height: String
  xOffset: String
  yOffset: String
}

input PagesBlocksBannerBackgroundMutation {
  fillStyles: String
  src: String
  position: String
  ornaments: [PagesBlocksBannerBackgroundOrnamentsMutation]
}

input PagesBlocksBannerImageMutation {
  src: String
  alt: String
}

input PagesBlocksBannerButtonsMutation {
  label: String
  link: String
  type: String
}

input PagesBlocksBannerMutation {
  style: PagesBlocksBannerStyleMutation
  background: PagesBlocksBannerBackgroundMutation
  image: PagesBlocksBannerImageMutation
  label: String
  headline: String
  subhead: String
  body: JSON
  buttons: [PagesBlocksBannerButtonsMutation]
  navigationLabel: String
}

input PagesBlocksEmbedStyleMutation {
  minHeight: String
  fullWidth: Boolean
  padding: String
}

input PagesBlocksEmbedBackgroundOrnamentsMutation {
  src: String
  alignment: String
  width: String
  height: String
  xOffset: String
  yOffset: String
}

input PagesBlocksEmbedBackgroundMutation {
  fillStyles: String
  src: String
  position: String
  ornaments: [PagesBlocksEmbedBackgroundOrnamentsMutation]
}

input PagesBlocksEmbedMutation {
  style: PagesBlocksEmbedStyleMutation
  background: PagesBlocksEmbedBackgroundMutation
  markup: String
  navigationLabel: String
}

input PagesBlocksTailwindFeatureTailwindMutation {
  section: String
  wrap: String
  imageWrap: String
  image: String
  contentWrap: String
  content: String
  label: String
  headline: String
  subhead: String
  text: String
  buttons: String
  button: String
}

input PagesBlocksTailwindFeatureImageMutation {
  src: String
  alt: String
}

input PagesBlocksTailwindFeatureBackgroundOrnamentsMutation {
  src: String
  alignment: String
  width: String
  height: String
  xOffset: String
  yOffset: String
}

input PagesBlocksTailwindFeatureBackgroundMutation {
  fillStyles: String
  src: String
  position: String
  ornaments: [PagesBlocksTailwindFeatureBackgroundOrnamentsMutation]
}

input PagesBlocksTailwindFeatureButtonsMutation {
  label: String
  link: String
}

input PagesBlocksTailwindFeatureMutation {
  tailwind: PagesBlocksTailwindFeatureTailwindMutation
  image: PagesBlocksTailwindFeatureImageMutation
  background: PagesBlocksTailwindFeatureBackgroundMutation
  rule: String
  label: String
  headline: String
  subhead: String
  body: JSON
  buttons: [PagesBlocksTailwindFeatureButtonsMutation]
  rule2: String
  navigationLabel: String
}

input PagesBlocksTailwindCardsTailwindMutation {
  section: String
  wrap: String
  imageWrap: String
  image: String
  contentWrap: String
  content: String
  label: String
  headline: String
  subhead: String
  text: String
  buttons: String
  button: String
  rule: String
  cardWrap: String
  card: String
  cardImageWrap: String
  cardImage: String
  cardContentWrap: String
  cardContent: String
  cardLabel: String
  cardHeadline: String
  cardSubhead: String
  cardText: String
  cardButtons: String
  cardButton: String
}

input PagesBlocksTailwindCardsImageMutation {
  src: String
  alt: String
}

input PagesBlocksTailwindCardsBackgroundOrnamentsMutation {
  src: String
  alignment: String
  width: String
  height: String
  xOffset: String
  yOffset: String
}

input PagesBlocksTailwindCardsBackgroundMutation {
  fillStyles: String
  src: String
  position: String
  ornaments: [PagesBlocksTailwindCardsBackgroundOrnamentsMutation]
}

input PagesBlocksTailwindCardsButtonsMutation {
  label: String
  link: String
  type: String
}

input PagesBlocksTailwindCardsItemsImageMutation {
  src: String
  alt: String
}

input PagesBlocksTailwindCardsItemsMutation {
  image: PagesBlocksTailwindCardsItemsImageMutation
  label: String
  headline: String
  subhead: String
  text: JSON
  link: String
  buttonLabel: String
}

input PagesBlocksTailwindCardsMutation {
  tailwind: PagesBlocksTailwindCardsTailwindMutation
  image: PagesBlocksTailwindCardsImageMutation
  background: PagesBlocksTailwindCardsBackgroundMutation
  rule: String
  label: String
  headline: String
  subhead: String
  body: JSON
  buttons: [PagesBlocksTailwindCardsButtonsMutation]
  items: [PagesBlocksTailwindCardsItemsMutation]
  rule2: String
  navigationLabel: String
}

input PagesBlocksMutation {
  feature: PagesBlocksFeatureMutation
  photoCards: PagesBlocksPhotoCardsMutation
  textCards: PagesBlocksTextCardsMutation
  banner: PagesBlocksBannerMutation
  embed: PagesBlocksEmbedMutation
  tailwindFeature: PagesBlocksTailwindFeatureMutation
  tailwindCards: PagesBlocksTailwindCardsMutation
}

input PagesMetaMutation {
  pageTitle: String
  pageDescription: String
  siteImageSrc: String
}

input PagesMutation {
  blocks: [PagesBlocksMutation]
  meta: PagesMetaMutation
}

schema {
  query: Query
  mutation: Mutation
}
  